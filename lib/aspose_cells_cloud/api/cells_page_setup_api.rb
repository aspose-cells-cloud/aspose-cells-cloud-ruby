=begin
#Web API Swagger specification

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require "uri"

module AsposeCellsCloud
  class CellsPageSetupApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # clear header footer
    # 
    # @param name 
    # @param sheet_name 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_page_setup_delete_header_footer(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_page_setup_delete_header_footer_with_http_info(name, sheet_name, opts)
      return data
    end

    # clear header footer
    # 
    # @param name 
    # @param sheet_name 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_page_setup_delete_header_footer_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPageSetupApi.cells_page_setup_delete_header_footer ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPageSetupApi.cells_page_setup_delete_header_footer"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPageSetupApi.cells_page_setup_delete_header_footer"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pagesetup/clearheaderfooter".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPageSetupApi#cells_page_setup_delete_header_footer\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # get page footer information
    # 
    # @param name 
    # @param sheet_name 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [PageSectionsResponse]
    def cells_page_setup_get_footer(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_page_setup_get_footer_with_http_info(name, sheet_name, opts)
      return data
    end

    # get page footer information
    # 
    # @param name 
    # @param sheet_name 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(PageSectionsResponse, Fixnum, Hash)>] PageSectionsResponse data, response status code and response headers
    def cells_page_setup_get_footer_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPageSetupApi.cells_page_setup_get_footer ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPageSetupApi.cells_page_setup_get_footer"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPageSetupApi.cells_page_setup_get_footer"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pagesetup/footer".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageSectionsResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPageSetupApi#cells_page_setup_get_footer\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # get page header information
    # 
    # @param name 
    # @param sheet_name 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [PageSectionsResponse]
    def cells_page_setup_get_header(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_page_setup_get_header_with_http_info(name, sheet_name, opts)
      return data
    end

    # get page header information
    # 
    # @param name 
    # @param sheet_name 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(PageSectionsResponse, Fixnum, Hash)>] PageSectionsResponse data, response status code and response headers
    def cells_page_setup_get_header_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPageSetupApi.cells_page_setup_get_header ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPageSetupApi.cells_page_setup_get_header"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPageSetupApi.cells_page_setup_get_header"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pagesetup/header".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageSectionsResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPageSetupApi#cells_page_setup_get_header\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Page Setup information.             
    # 
    # @param name 
    # @param sheet_name 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [PageSetupResponse]
    def cells_page_setup_get_page_setup(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_page_setup_get_page_setup_with_http_info(name, sheet_name, opts)
      return data
    end

    # Get Page Setup information.             
    # 
    # @param name 
    # @param sheet_name 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(PageSetupResponse, Fixnum, Hash)>] PageSetupResponse data, response status code and response headers
    def cells_page_setup_get_page_setup_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPageSetupApi.cells_page_setup_get_page_setup ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPageSetupApi.cells_page_setup_get_page_setup"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPageSetupApi.cells_page_setup_get_page_setup"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pagesetup".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageSetupResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPageSetupApi#cells_page_setup_get_page_setup\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # update  page footer information 
    # 
    # @param name 
    # @param sheet_name 
    # @param section 
    # @param script 
    # @param is_first_page 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_page_setup_post_footer(name, sheet_name, section, script, is_first_page, opts = {})
      data, _status_code, _headers = cells_page_setup_post_footer_with_http_info(name, sheet_name, section, script, is_first_page, opts)
      return data
    end

    # update  page footer information 
    # 
    # @param name 
    # @param sheet_name 
    # @param section 
    # @param script 
    # @param is_first_page 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_page_setup_post_footer_with_http_info(name, sheet_name, section, script, is_first_page, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPageSetupApi.cells_page_setup_post_footer ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPageSetupApi.cells_page_setup_post_footer"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPageSetupApi.cells_page_setup_post_footer"
      end
      # verify the required parameter 'section' is set
      if @api_client.config.client_side_validation && section.nil?
        fail ArgumentError, "Missing the required parameter 'section' when calling CellsPageSetupApi.cells_page_setup_post_footer"
      end
      # verify the required parameter 'script' is set
      if @api_client.config.client_side_validation && script.nil?
        fail ArgumentError, "Missing the required parameter 'script' when calling CellsPageSetupApi.cells_page_setup_post_footer"
      end
      # verify the required parameter 'is_first_page' is set
      if @api_client.config.client_side_validation && is_first_page.nil?
        fail ArgumentError, "Missing the required parameter 'is_first_page' when calling CellsPageSetupApi.cells_page_setup_post_footer"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pagesetup/footer".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'section'] = section
      query_params[:'script'] = script
      query_params[:'isFirstPage'] = is_first_page
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPageSetupApi#cells_page_setup_post_footer\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # update  page header information 
    # 
    # @param name 
    # @param sheet_name 
    # @param section 
    # @param script 
    # @param is_first_page 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_page_setup_post_header(name, sheet_name, section, script, is_first_page, opts = {})
      data, _status_code, _headers = cells_page_setup_post_header_with_http_info(name, sheet_name, section, script, is_first_page, opts)
      return data
    end

    # update  page header information 
    # 
    # @param name 
    # @param sheet_name 
    # @param section 
    # @param script 
    # @param is_first_page 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_page_setup_post_header_with_http_info(name, sheet_name, section, script, is_first_page, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPageSetupApi.cells_page_setup_post_header ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPageSetupApi.cells_page_setup_post_header"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPageSetupApi.cells_page_setup_post_header"
      end
      # verify the required parameter 'section' is set
      if @api_client.config.client_side_validation && section.nil?
        fail ArgumentError, "Missing the required parameter 'section' when calling CellsPageSetupApi.cells_page_setup_post_header"
      end
      # verify the required parameter 'script' is set
      if @api_client.config.client_side_validation && script.nil?
        fail ArgumentError, "Missing the required parameter 'script' when calling CellsPageSetupApi.cells_page_setup_post_header"
      end
      # verify the required parameter 'is_first_page' is set
      if @api_client.config.client_side_validation && is_first_page.nil?
        fail ArgumentError, "Missing the required parameter 'is_first_page' when calling CellsPageSetupApi.cells_page_setup_post_header"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pagesetup/header".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'section'] = section
      query_params[:'script'] = script
      query_params[:'isFirstPage'] = is_first_page
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPageSetupApi#cells_page_setup_post_header\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update Page Setup information.
    # 
    # @param name 
    # @param sheet_name 
    # @param [Hash] opts the optional parameters
    # @option opts [PageSetup] :page_setup 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_page_setup_post_page_setup(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_page_setup_post_page_setup_with_http_info(name, sheet_name, opts)
      return data
    end

    # Update Page Setup information.
    # 
    # @param name 
    # @param sheet_name 
    # @param [Hash] opts the optional parameters
    # @option opts [PageSetup] :page_setup 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_page_setup_post_page_setup_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPageSetupApi.cells_page_setup_post_page_setup ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPageSetupApi.cells_page_setup_post_page_setup"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPageSetupApi.cells_page_setup_post_page_setup"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pagesetup".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'page_setup'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPageSetupApi#cells_page_setup_post_page_setup\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
