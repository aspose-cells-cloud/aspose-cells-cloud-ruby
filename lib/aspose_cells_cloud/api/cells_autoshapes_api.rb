=begin
#Web API Swagger specification

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require "uri"

module AsposeCellsCloud
  class CellsAutoshapesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Get autoshape info.
    # 
    # @param name Document name.
    # @param sheet_name Worksheet name.
    # @param autoshape_number The autoshape number.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :format Exported format.
    # @option opts [String] :folder The document folder.
    # @option opts [String] :storage storage name.
    # @return [File]
    def cells_autoshapes_get_worksheet_autoshape(name, sheet_name, autoshape_number, opts = {})
      data, _status_code, _headers = cells_autoshapes_get_worksheet_autoshape_with_http_info(name, sheet_name, autoshape_number, opts)
      return data
    end

    # Get autoshape info.
    # 
    # @param name Document name.
    # @param sheet_name Worksheet name.
    # @param autoshape_number The autoshape number.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :format Exported format.
    # @option opts [String] :folder The document folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(File, Fixnum, Hash)>] File data, response status code and response headers
    def cells_autoshapes_get_worksheet_autoshape_with_http_info(name, sheet_name, autoshape_number, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsAutoshapesApi.cells_autoshapes_get_worksheet_autoshape ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsAutoshapesApi.cells_autoshapes_get_worksheet_autoshape"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsAutoshapesApi.cells_autoshapes_get_worksheet_autoshape"
      end
      # verify the required parameter 'autoshape_number' is set
      if @api_client.config.client_side_validation && autoshape_number.nil?
        fail ArgumentError, "Missing the required parameter 'autoshape_number' when calling CellsAutoshapesApi.cells_autoshapes_get_worksheet_autoshape"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/autoshapes/{autoshapeNumber}".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'autoshapeNumber' + '}', autoshape_number.to_s)

      # query parameters
      query_params = {}
      query_params[:'format'] = opts[:'format'] if !opts[:'format'].nil?
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'File')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsAutoshapesApi#cells_autoshapes_get_worksheet_autoshape\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get worksheet autoshapes info.
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [AutoShapesResponse]
    def cells_autoshapes_get_worksheet_autoshapes(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_autoshapes_get_worksheet_autoshapes_with_http_info(name, sheet_name, opts)
      return data
    end

    # Get worksheet autoshapes info.
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(AutoShapesResponse, Fixnum, Hash)>] AutoShapesResponse data, response status code and response headers
    def cells_autoshapes_get_worksheet_autoshapes_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsAutoshapesApi.cells_autoshapes_get_worksheet_autoshapes ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsAutoshapesApi.cells_autoshapes_get_worksheet_autoshapes"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsAutoshapesApi.cells_autoshapes_get_worksheet_autoshapes"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/autoshapes".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AutoShapesResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsAutoshapesApi#cells_autoshapes_get_worksheet_autoshapes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
