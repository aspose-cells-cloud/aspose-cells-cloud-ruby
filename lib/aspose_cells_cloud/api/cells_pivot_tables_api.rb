=begin
#Web API Swagger specification

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require "uri"

module AsposeCellsCloud
  class CellsPivotTablesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Delete pivot field into into pivot table
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param pivot_table_index Pivot table index
    # @param pivot_field_type The fields area type.
    # @param [Hash] opts the optional parameters
    # @option opts [PivotTableFieldRequest] :request Dto that conrains field indexes
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_pivot_tables_delete_pivot_table_field(name, sheet_name, pivot_table_index, pivot_field_type, opts = {})
      data, _status_code, _headers = cells_pivot_tables_delete_pivot_table_field_with_http_info(name, sheet_name, pivot_table_index, pivot_field_type, opts)
      return data
    end

    # Delete pivot field into into pivot table
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param pivot_table_index Pivot table index
    # @param pivot_field_type The fields area type.
    # @param [Hash] opts the optional parameters
    # @option opts [PivotTableFieldRequest] :request Dto that conrains field indexes
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_pivot_tables_delete_pivot_table_field_with_http_info(name, sheet_name, pivot_table_index, pivot_field_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPivotTablesApi.cells_pivot_tables_delete_pivot_table_field ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPivotTablesApi.cells_pivot_tables_delete_pivot_table_field"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPivotTablesApi.cells_pivot_tables_delete_pivot_table_field"
      end
      # verify the required parameter 'pivot_table_index' is set
      if @api_client.config.client_side_validation && pivot_table_index.nil?
        fail ArgumentError, "Missing the required parameter 'pivot_table_index' when calling CellsPivotTablesApi.cells_pivot_tables_delete_pivot_table_field"
      end
      # verify the required parameter 'pivot_field_type' is set
      if @api_client.config.client_side_validation && pivot_field_type.nil?
        fail ArgumentError, "Missing the required parameter 'pivot_field_type' when calling CellsPivotTablesApi.cells_pivot_tables_delete_pivot_table_field"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pivottables/{pivotTableIndex}/PivotField".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'pivotTableIndex' + '}', pivot_table_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'pivotFieldType'] = pivot_field_type
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'request'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPivotTablesApi#cells_pivot_tables_delete_pivot_table_field\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete worksheet pivot table by index
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param pivot_table_index Pivot table index
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_pivot_tables_delete_worksheet_pivot_table(name, sheet_name, pivot_table_index, opts = {})
      data, _status_code, _headers = cells_pivot_tables_delete_worksheet_pivot_table_with_http_info(name, sheet_name, pivot_table_index, opts)
      return data
    end

    # Delete worksheet pivot table by index
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param pivot_table_index Pivot table index
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_pivot_tables_delete_worksheet_pivot_table_with_http_info(name, sheet_name, pivot_table_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPivotTablesApi.cells_pivot_tables_delete_worksheet_pivot_table ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPivotTablesApi.cells_pivot_tables_delete_worksheet_pivot_table"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPivotTablesApi.cells_pivot_tables_delete_worksheet_pivot_table"
      end
      # verify the required parameter 'pivot_table_index' is set
      if @api_client.config.client_side_validation && pivot_table_index.nil?
        fail ArgumentError, "Missing the required parameter 'pivot_table_index' when calling CellsPivotTablesApi.cells_pivot_tables_delete_worksheet_pivot_table"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pivottables/{pivotTableIndex}".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'pivotTableIndex' + '}', pivot_table_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPivotTablesApi#cells_pivot_tables_delete_worksheet_pivot_table\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # delete  pivot filter for piovt table             
    # 
    # @param name 
    # @param sheet_name 
    # @param pivot_table_index 
    # @param field_index 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :need_re_calculate  (default to false)
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_pivot_tables_delete_worksheet_pivot_table_filter(name, sheet_name, pivot_table_index, field_index, opts = {})
      data, _status_code, _headers = cells_pivot_tables_delete_worksheet_pivot_table_filter_with_http_info(name, sheet_name, pivot_table_index, field_index, opts)
      return data
    end

    # delete  pivot filter for piovt table             
    # 
    # @param name 
    # @param sheet_name 
    # @param pivot_table_index 
    # @param field_index 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :need_re_calculate 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_pivot_tables_delete_worksheet_pivot_table_filter_with_http_info(name, sheet_name, pivot_table_index, field_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPivotTablesApi.cells_pivot_tables_delete_worksheet_pivot_table_filter ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPivotTablesApi.cells_pivot_tables_delete_worksheet_pivot_table_filter"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPivotTablesApi.cells_pivot_tables_delete_worksheet_pivot_table_filter"
      end
      # verify the required parameter 'pivot_table_index' is set
      if @api_client.config.client_side_validation && pivot_table_index.nil?
        fail ArgumentError, "Missing the required parameter 'pivot_table_index' when calling CellsPivotTablesApi.cells_pivot_tables_delete_worksheet_pivot_table_filter"
      end
      # verify the required parameter 'field_index' is set
      if @api_client.config.client_side_validation && field_index.nil?
        fail ArgumentError, "Missing the required parameter 'field_index' when calling CellsPivotTablesApi.cells_pivot_tables_delete_worksheet_pivot_table_filter"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pivottables/{pivotTableIndex}/PivotFilters/{fieldIndex}".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'pivotTableIndex' + '}', pivot_table_index.to_s).sub('{' + 'fieldIndex' + '}', field_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'needReCalculate'] = opts[:'need_re_calculate'] if !opts[:'need_re_calculate'].nil?
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPivotTablesApi#cells_pivot_tables_delete_worksheet_pivot_table_filter\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # delete all pivot filters for piovt table
    # 
    # @param name 
    # @param sheet_name 
    # @param pivot_table_index 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :need_re_calculate  (default to false)
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_pivot_tables_delete_worksheet_pivot_table_filters(name, sheet_name, pivot_table_index, opts = {})
      data, _status_code, _headers = cells_pivot_tables_delete_worksheet_pivot_table_filters_with_http_info(name, sheet_name, pivot_table_index, opts)
      return data
    end

    # delete all pivot filters for piovt table
    # 
    # @param name 
    # @param sheet_name 
    # @param pivot_table_index 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :need_re_calculate 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_pivot_tables_delete_worksheet_pivot_table_filters_with_http_info(name, sheet_name, pivot_table_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPivotTablesApi.cells_pivot_tables_delete_worksheet_pivot_table_filters ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPivotTablesApi.cells_pivot_tables_delete_worksheet_pivot_table_filters"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPivotTablesApi.cells_pivot_tables_delete_worksheet_pivot_table_filters"
      end
      # verify the required parameter 'pivot_table_index' is set
      if @api_client.config.client_side_validation && pivot_table_index.nil?
        fail ArgumentError, "Missing the required parameter 'pivot_table_index' when calling CellsPivotTablesApi.cells_pivot_tables_delete_worksheet_pivot_table_filters"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pivottables/{pivotTableIndex}/PivotFilters".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'pivotTableIndex' + '}', pivot_table_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'needReCalculate'] = opts[:'need_re_calculate'] if !opts[:'need_re_calculate'].nil?
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPivotTablesApi#cells_pivot_tables_delete_worksheet_pivot_table_filters\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete worksheet pivot tables
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_pivot_tables_delete_worksheet_pivot_tables(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_pivot_tables_delete_worksheet_pivot_tables_with_http_info(name, sheet_name, opts)
      return data
    end

    # Delete worksheet pivot tables
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_pivot_tables_delete_worksheet_pivot_tables_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPivotTablesApi.cells_pivot_tables_delete_worksheet_pivot_tables ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPivotTablesApi.cells_pivot_tables_delete_worksheet_pivot_tables"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPivotTablesApi.cells_pivot_tables_delete_worksheet_pivot_tables"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pivottables".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPivotTablesApi#cells_pivot_tables_delete_worksheet_pivot_tables\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get pivot field into into pivot table
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param pivot_table_index Pivot table index
    # @param pivot_field_index The field index in the base fields.
    # @param pivot_field_type The fields area type.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [PivotFieldResponse]
    def cells_pivot_tables_get_pivot_table_field(name, sheet_name, pivot_table_index, pivot_field_index, pivot_field_type, opts = {})
      data, _status_code, _headers = cells_pivot_tables_get_pivot_table_field_with_http_info(name, sheet_name, pivot_table_index, pivot_field_index, pivot_field_type, opts)
      return data
    end

    # Get pivot field into into pivot table
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param pivot_table_index Pivot table index
    # @param pivot_field_index The field index in the base fields.
    # @param pivot_field_type The fields area type.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(PivotFieldResponse, Fixnum, Hash)>] PivotFieldResponse data, response status code and response headers
    def cells_pivot_tables_get_pivot_table_field_with_http_info(name, sheet_name, pivot_table_index, pivot_field_index, pivot_field_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPivotTablesApi.cells_pivot_tables_get_pivot_table_field ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPivotTablesApi.cells_pivot_tables_get_pivot_table_field"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPivotTablesApi.cells_pivot_tables_get_pivot_table_field"
      end
      # verify the required parameter 'pivot_table_index' is set
      if @api_client.config.client_side_validation && pivot_table_index.nil?
        fail ArgumentError, "Missing the required parameter 'pivot_table_index' when calling CellsPivotTablesApi.cells_pivot_tables_get_pivot_table_field"
      end
      # verify the required parameter 'pivot_field_index' is set
      if @api_client.config.client_side_validation && pivot_field_index.nil?
        fail ArgumentError, "Missing the required parameter 'pivot_field_index' when calling CellsPivotTablesApi.cells_pivot_tables_get_pivot_table_field"
      end
      # verify the required parameter 'pivot_field_type' is set
      if @api_client.config.client_side_validation && pivot_field_type.nil?
        fail ArgumentError, "Missing the required parameter 'pivot_field_type' when calling CellsPivotTablesApi.cells_pivot_tables_get_pivot_table_field"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pivottables/{pivotTableIndex}/PivotField".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'pivotTableIndex' + '}', pivot_table_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'pivotFieldIndex'] = pivot_field_index
      query_params[:'pivotFieldType'] = pivot_field_type
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PivotFieldResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPivotTablesApi#cells_pivot_tables_get_pivot_table_field\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get worksheet pivottable info by index.
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param pivottable_index 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [PivotTableResponse]
    def cells_pivot_tables_get_worksheet_pivot_table(name, sheet_name, pivottable_index, opts = {})
      data, _status_code, _headers = cells_pivot_tables_get_worksheet_pivot_table_with_http_info(name, sheet_name, pivottable_index, opts)
      return data
    end

    # Get worksheet pivottable info by index.
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param pivottable_index 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(PivotTableResponse, Fixnum, Hash)>] PivotTableResponse data, response status code and response headers
    def cells_pivot_tables_get_worksheet_pivot_table_with_http_info(name, sheet_name, pivottable_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPivotTablesApi.cells_pivot_tables_get_worksheet_pivot_table ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPivotTablesApi.cells_pivot_tables_get_worksheet_pivot_table"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPivotTablesApi.cells_pivot_tables_get_worksheet_pivot_table"
      end
      # verify the required parameter 'pivottable_index' is set
      if @api_client.config.client_side_validation && pivottable_index.nil?
        fail ArgumentError, "Missing the required parameter 'pivottable_index' when calling CellsPivotTablesApi.cells_pivot_tables_get_worksheet_pivot_table"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pivottables/{pivottableIndex}".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'pivottableIndex' + '}', pivottable_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PivotTableResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPivotTablesApi#cells_pivot_tables_get_worksheet_pivot_table\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param pivot_table_index 
    # @param filter_index 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [PivotFilterResponse]
    def cells_pivot_tables_get_worksheet_pivot_table_filter(name, sheet_name, pivot_table_index, filter_index, opts = {})
      data, _status_code, _headers = cells_pivot_tables_get_worksheet_pivot_table_filter_with_http_info(name, sheet_name, pivot_table_index, filter_index, opts)
      return data
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param pivot_table_index 
    # @param filter_index 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(PivotFilterResponse, Fixnum, Hash)>] PivotFilterResponse data, response status code and response headers
    def cells_pivot_tables_get_worksheet_pivot_table_filter_with_http_info(name, sheet_name, pivot_table_index, filter_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPivotTablesApi.cells_pivot_tables_get_worksheet_pivot_table_filter ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPivotTablesApi.cells_pivot_tables_get_worksheet_pivot_table_filter"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPivotTablesApi.cells_pivot_tables_get_worksheet_pivot_table_filter"
      end
      # verify the required parameter 'pivot_table_index' is set
      if @api_client.config.client_side_validation && pivot_table_index.nil?
        fail ArgumentError, "Missing the required parameter 'pivot_table_index' when calling CellsPivotTablesApi.cells_pivot_tables_get_worksheet_pivot_table_filter"
      end
      # verify the required parameter 'filter_index' is set
      if @api_client.config.client_side_validation && filter_index.nil?
        fail ArgumentError, "Missing the required parameter 'filter_index' when calling CellsPivotTablesApi.cells_pivot_tables_get_worksheet_pivot_table_filter"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pivottables/{pivotTableIndex}/PivotFilters/{filterIndex}".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'pivotTableIndex' + '}', pivot_table_index.to_s).sub('{' + 'filterIndex' + '}', filter_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PivotFilterResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPivotTablesApi#cells_pivot_tables_get_worksheet_pivot_table_filter\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param pivot_table_index 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [PivotFiltersResponse]
    def cells_pivot_tables_get_worksheet_pivot_table_filters(name, sheet_name, pivot_table_index, opts = {})
      data, _status_code, _headers = cells_pivot_tables_get_worksheet_pivot_table_filters_with_http_info(name, sheet_name, pivot_table_index, opts)
      return data
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param pivot_table_index 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(PivotFiltersResponse, Fixnum, Hash)>] PivotFiltersResponse data, response status code and response headers
    def cells_pivot_tables_get_worksheet_pivot_table_filters_with_http_info(name, sheet_name, pivot_table_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPivotTablesApi.cells_pivot_tables_get_worksheet_pivot_table_filters ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPivotTablesApi.cells_pivot_tables_get_worksheet_pivot_table_filters"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPivotTablesApi.cells_pivot_tables_get_worksheet_pivot_table_filters"
      end
      # verify the required parameter 'pivot_table_index' is set
      if @api_client.config.client_side_validation && pivot_table_index.nil?
        fail ArgumentError, "Missing the required parameter 'pivot_table_index' when calling CellsPivotTablesApi.cells_pivot_tables_get_worksheet_pivot_table_filters"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pivottables/{pivotTableIndex}/PivotFilters".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'pivotTableIndex' + '}', pivot_table_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PivotFiltersResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPivotTablesApi#cells_pivot_tables_get_worksheet_pivot_table_filters\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get worksheet pivottables info.
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [PivotTablesResponse]
    def cells_pivot_tables_get_worksheet_pivot_tables(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_pivot_tables_get_worksheet_pivot_tables_with_http_info(name, sheet_name, opts)
      return data
    end

    # Get worksheet pivottables info.
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(PivotTablesResponse, Fixnum, Hash)>] PivotTablesResponse data, response status code and response headers
    def cells_pivot_tables_get_worksheet_pivot_tables_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPivotTablesApi.cells_pivot_tables_get_worksheet_pivot_tables ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPivotTablesApi.cells_pivot_tables_get_worksheet_pivot_tables"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPivotTablesApi.cells_pivot_tables_get_worksheet_pivot_tables"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pivottables".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PivotTablesResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPivotTablesApi#cells_pivot_tables_get_worksheet_pivot_tables\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update cell style for pivot table
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param pivot_table_index Pivot table index
    # @param column 
    # @param row 
    # @param [Hash] opts the optional parameters
    # @option opts [Style] :style Style dto in request body.
    # @option opts [BOOLEAN] :need_re_calculate  (default to false)
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_pivot_tables_post_pivot_table_cell_style(name, sheet_name, pivot_table_index, column, row, opts = {})
      data, _status_code, _headers = cells_pivot_tables_post_pivot_table_cell_style_with_http_info(name, sheet_name, pivot_table_index, column, row, opts)
      return data
    end

    # Update cell style for pivot table
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param pivot_table_index Pivot table index
    # @param column 
    # @param row 
    # @param [Hash] opts the optional parameters
    # @option opts [Style] :style Style dto in request body.
    # @option opts [BOOLEAN] :need_re_calculate 
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_pivot_tables_post_pivot_table_cell_style_with_http_info(name, sheet_name, pivot_table_index, column, row, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_cell_style ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_cell_style"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_cell_style"
      end
      # verify the required parameter 'pivot_table_index' is set
      if @api_client.config.client_side_validation && pivot_table_index.nil?
        fail ArgumentError, "Missing the required parameter 'pivot_table_index' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_cell_style"
      end
      # verify the required parameter 'column' is set
      if @api_client.config.client_side_validation && column.nil?
        fail ArgumentError, "Missing the required parameter 'column' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_cell_style"
      end
      # verify the required parameter 'row' is set
      if @api_client.config.client_side_validation && row.nil?
        fail ArgumentError, "Missing the required parameter 'row' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_cell_style"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pivottables/{pivotTableIndex}/Format".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'pivotTableIndex' + '}', pivot_table_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'column'] = column
      query_params[:'row'] = row
      query_params[:'needReCalculate'] = opts[:'need_re_calculate'] if !opts[:'need_re_calculate'].nil?
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'style'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPivotTablesApi#cells_pivot_tables_post_pivot_table_cell_style\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param pivot_table_index 
    # @param pivot_field_type 
    # @param field_index 
    # @param item_index 
    # @param is_hide 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :need_re_calculate  (default to false)
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_pivot_tables_post_pivot_table_field_hide_item(name, sheet_name, pivot_table_index, pivot_field_type, field_index, item_index, is_hide, opts = {})
      data, _status_code, _headers = cells_pivot_tables_post_pivot_table_field_hide_item_with_http_info(name, sheet_name, pivot_table_index, pivot_field_type, field_index, item_index, is_hide, opts)
      return data
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param pivot_table_index 
    # @param pivot_field_type 
    # @param field_index 
    # @param item_index 
    # @param is_hide 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :need_re_calculate 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_pivot_tables_post_pivot_table_field_hide_item_with_http_info(name, sheet_name, pivot_table_index, pivot_field_type, field_index, item_index, is_hide, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_field_hide_item ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_field_hide_item"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_field_hide_item"
      end
      # verify the required parameter 'pivot_table_index' is set
      if @api_client.config.client_side_validation && pivot_table_index.nil?
        fail ArgumentError, "Missing the required parameter 'pivot_table_index' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_field_hide_item"
      end
      # verify the required parameter 'pivot_field_type' is set
      if @api_client.config.client_side_validation && pivot_field_type.nil?
        fail ArgumentError, "Missing the required parameter 'pivot_field_type' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_field_hide_item"
      end
      # verify the required parameter 'field_index' is set
      if @api_client.config.client_side_validation && field_index.nil?
        fail ArgumentError, "Missing the required parameter 'field_index' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_field_hide_item"
      end
      # verify the required parameter 'item_index' is set
      if @api_client.config.client_side_validation && item_index.nil?
        fail ArgumentError, "Missing the required parameter 'item_index' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_field_hide_item"
      end
      # verify the required parameter 'is_hide' is set
      if @api_client.config.client_side_validation && is_hide.nil?
        fail ArgumentError, "Missing the required parameter 'is_hide' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_field_hide_item"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pivottables/{pivotTableIndex}/PivotField/Hide".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'pivotTableIndex' + '}', pivot_table_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'pivotFieldType'] = pivot_field_type
      query_params[:'fieldIndex'] = field_index
      query_params[:'itemIndex'] = item_index
      query_params[:'isHide'] = is_hide
      query_params[:'needReCalculate'] = opts[:'need_re_calculate'] if !opts[:'need_re_calculate'].nil?
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPivotTablesApi#cells_pivot_tables_post_pivot_table_field_hide_item\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param pivot_table_index 
    # @param field_index 
    # @param from 
    # @param to 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_pivot_tables_post_pivot_table_field_move_to(name, sheet_name, pivot_table_index, field_index, from, to, opts = {})
      data, _status_code, _headers = cells_pivot_tables_post_pivot_table_field_move_to_with_http_info(name, sheet_name, pivot_table_index, field_index, from, to, opts)
      return data
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param pivot_table_index 
    # @param field_index 
    # @param from 
    # @param to 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_pivot_tables_post_pivot_table_field_move_to_with_http_info(name, sheet_name, pivot_table_index, field_index, from, to, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_field_move_to ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_field_move_to"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_field_move_to"
      end
      # verify the required parameter 'pivot_table_index' is set
      if @api_client.config.client_side_validation && pivot_table_index.nil?
        fail ArgumentError, "Missing the required parameter 'pivot_table_index' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_field_move_to"
      end
      # verify the required parameter 'field_index' is set
      if @api_client.config.client_side_validation && field_index.nil?
        fail ArgumentError, "Missing the required parameter 'field_index' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_field_move_to"
      end
      # verify the required parameter 'from' is set
      if @api_client.config.client_side_validation && from.nil?
        fail ArgumentError, "Missing the required parameter 'from' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_field_move_to"
      end
      # verify the required parameter 'to' is set
      if @api_client.config.client_side_validation && to.nil?
        fail ArgumentError, "Missing the required parameter 'to' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_field_move_to"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pivottables/{pivotTableIndex}/PivotField/Move".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'pivotTableIndex' + '}', pivot_table_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'fieldIndex'] = field_index
      query_params[:'from'] = from
      query_params[:'to'] = to
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPivotTablesApi#cells_pivot_tables_post_pivot_table_field_move_to\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update style for pivot table
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param pivot_table_index Pivot table index
    # @param [Hash] opts the optional parameters
    # @option opts [Style] :style Style dto in request body.
    # @option opts [BOOLEAN] :need_re_calculate  (default to false)
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_pivot_tables_post_pivot_table_style(name, sheet_name, pivot_table_index, opts = {})
      data, _status_code, _headers = cells_pivot_tables_post_pivot_table_style_with_http_info(name, sheet_name, pivot_table_index, opts)
      return data
    end

    # Update style for pivot table
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param pivot_table_index Pivot table index
    # @param [Hash] opts the optional parameters
    # @option opts [Style] :style Style dto in request body.
    # @option opts [BOOLEAN] :need_re_calculate 
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_pivot_tables_post_pivot_table_style_with_http_info(name, sheet_name, pivot_table_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_style ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_style"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_style"
      end
      # verify the required parameter 'pivot_table_index' is set
      if @api_client.config.client_side_validation && pivot_table_index.nil?
        fail ArgumentError, "Missing the required parameter 'pivot_table_index' when calling CellsPivotTablesApi.cells_pivot_tables_post_pivot_table_style"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pivottables/{pivotTableIndex}/FormatAll".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'pivotTableIndex' + '}', pivot_table_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'needReCalculate'] = opts[:'need_re_calculate'] if !opts[:'need_re_calculate'].nil?
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'style'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPivotTablesApi#cells_pivot_tables_post_pivot_table_style\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Calculates pivottable's data to cells.
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param pivot_table_index Pivot table index
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_pivot_tables_post_worksheet_pivot_table_calculate(name, sheet_name, pivot_table_index, opts = {})
      data, _status_code, _headers = cells_pivot_tables_post_worksheet_pivot_table_calculate_with_http_info(name, sheet_name, pivot_table_index, opts)
      return data
    end

    # Calculates pivottable&#39;s data to cells.
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param pivot_table_index Pivot table index
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_pivot_tables_post_worksheet_pivot_table_calculate_with_http_info(name, sheet_name, pivot_table_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPivotTablesApi.cells_pivot_tables_post_worksheet_pivot_table_calculate ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPivotTablesApi.cells_pivot_tables_post_worksheet_pivot_table_calculate"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPivotTablesApi.cells_pivot_tables_post_worksheet_pivot_table_calculate"
      end
      # verify the required parameter 'pivot_table_index' is set
      if @api_client.config.client_side_validation && pivot_table_index.nil?
        fail ArgumentError, "Missing the required parameter 'pivot_table_index' when calling CellsPivotTablesApi.cells_pivot_tables_post_worksheet_pivot_table_calculate"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pivottables/{pivotTableIndex}/Calculate".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'pivotTableIndex' + '}', pivot_table_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPivotTablesApi#cells_pivot_tables_post_worksheet_pivot_table_calculate\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param pivot_table_index 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :row 
    # @option opts [Integer] :column 
    # @option opts [String] :dest_cell_name 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_pivot_tables_post_worksheet_pivot_table_move(name, sheet_name, pivot_table_index, opts = {})
      data, _status_code, _headers = cells_pivot_tables_post_worksheet_pivot_table_move_with_http_info(name, sheet_name, pivot_table_index, opts)
      return data
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param pivot_table_index 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :row 
    # @option opts [Integer] :column 
    # @option opts [String] :dest_cell_name 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_pivot_tables_post_worksheet_pivot_table_move_with_http_info(name, sheet_name, pivot_table_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPivotTablesApi.cells_pivot_tables_post_worksheet_pivot_table_move ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPivotTablesApi.cells_pivot_tables_post_worksheet_pivot_table_move"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPivotTablesApi.cells_pivot_tables_post_worksheet_pivot_table_move"
      end
      # verify the required parameter 'pivot_table_index' is set
      if @api_client.config.client_side_validation && pivot_table_index.nil?
        fail ArgumentError, "Missing the required parameter 'pivot_table_index' when calling CellsPivotTablesApi.cells_pivot_tables_post_worksheet_pivot_table_move"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pivottables/{pivotTableIndex}/Move".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'pivotTableIndex' + '}', pivot_table_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'row'] = opts[:'row'] if !opts[:'row'].nil?
      query_params[:'column'] = opts[:'column'] if !opts[:'column'].nil?
      query_params[:'destCellName'] = opts[:'dest_cell_name'] if !opts[:'dest_cell_name'].nil?
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPivotTablesApi#cells_pivot_tables_post_worksheet_pivot_table_move\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Add pivot field into into pivot table
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param pivot_table_index Pivot table index
    # @param pivot_field_type The fields area type.
    # @param [Hash] opts the optional parameters
    # @option opts [PivotTableFieldRequest] :request Dto that conrains field indexes
    # @option opts [BOOLEAN] :need_re_calculate  (default to false)
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_pivot_tables_put_pivot_table_field(name, sheet_name, pivot_table_index, pivot_field_type, opts = {})
      data, _status_code, _headers = cells_pivot_tables_put_pivot_table_field_with_http_info(name, sheet_name, pivot_table_index, pivot_field_type, opts)
      return data
    end

    # Add pivot field into into pivot table
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param pivot_table_index Pivot table index
    # @param pivot_field_type The fields area type.
    # @param [Hash] opts the optional parameters
    # @option opts [PivotTableFieldRequest] :request Dto that conrains field indexes
    # @option opts [BOOLEAN] :need_re_calculate 
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_pivot_tables_put_pivot_table_field_with_http_info(name, sheet_name, pivot_table_index, pivot_field_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPivotTablesApi.cells_pivot_tables_put_pivot_table_field ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPivotTablesApi.cells_pivot_tables_put_pivot_table_field"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPivotTablesApi.cells_pivot_tables_put_pivot_table_field"
      end
      # verify the required parameter 'pivot_table_index' is set
      if @api_client.config.client_side_validation && pivot_table_index.nil?
        fail ArgumentError, "Missing the required parameter 'pivot_table_index' when calling CellsPivotTablesApi.cells_pivot_tables_put_pivot_table_field"
      end
      # verify the required parameter 'pivot_field_type' is set
      if @api_client.config.client_side_validation && pivot_field_type.nil?
        fail ArgumentError, "Missing the required parameter 'pivot_field_type' when calling CellsPivotTablesApi.cells_pivot_tables_put_pivot_table_field"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pivottables/{pivotTableIndex}/PivotField".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'pivotTableIndex' + '}', pivot_table_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'pivotFieldType'] = pivot_field_type
      query_params[:'needReCalculate'] = opts[:'need_re_calculate'] if !opts[:'need_re_calculate'].nil?
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'request'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPivotTablesApi#cells_pivot_tables_put_pivot_table_field\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Add a pivot table into worksheet.
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param [Hash] opts the optional parameters
    # @option opts [CreatePivotTableRequest] :request CreatePivotTableRequest dto in request body.
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @option opts [String] :source_data The data for the new PivotTable cache.
    # @option opts [String] :dest_cell_name The cell in the upper-left corner of the PivotTable report&#39;s destination range.
    # @option opts [String] :table_name The name of the new PivotTable report.
    # @option opts [BOOLEAN] :use_same_source Indicates whether using same data source when another existing pivot table has used this data source. If the property is true, it will save memory.
    # @return [PivotTableResponse]
    def cells_pivot_tables_put_worksheet_pivot_table(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_pivot_tables_put_worksheet_pivot_table_with_http_info(name, sheet_name, opts)
      return data
    end

    # Add a pivot table into worksheet.
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param [Hash] opts the optional parameters
    # @option opts [CreatePivotTableRequest] :request CreatePivotTableRequest dto in request body.
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @option opts [String] :source_data The data for the new PivotTable cache.
    # @option opts [String] :dest_cell_name The cell in the upper-left corner of the PivotTable report&#39;s destination range.
    # @option opts [String] :table_name The name of the new PivotTable report.
    # @option opts [BOOLEAN] :use_same_source Indicates whether using same data source when another existing pivot table has used this data source. If the property is true, it will save memory.
    # @return [Array<(PivotTableResponse, Fixnum, Hash)>] PivotTableResponse data, response status code and response headers
    def cells_pivot_tables_put_worksheet_pivot_table_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPivotTablesApi.cells_pivot_tables_put_worksheet_pivot_table ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPivotTablesApi.cells_pivot_tables_put_worksheet_pivot_table"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPivotTablesApi.cells_pivot_tables_put_worksheet_pivot_table"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pivottables".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?
      query_params[:'sourceData'] = opts[:'source_data'] if !opts[:'source_data'].nil?
      query_params[:'destCellName'] = opts[:'dest_cell_name'] if !opts[:'dest_cell_name'].nil?
      query_params[:'tableName'] = opts[:'table_name'] if !opts[:'table_name'].nil?
      query_params[:'useSameSource'] = opts[:'use_same_source'] if !opts[:'use_same_source'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'request'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PivotTableResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPivotTablesApi#cells_pivot_tables_put_worksheet_pivot_table\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Add pivot filter for piovt table index
    # 
    # @param name 
    # @param sheet_name 
    # @param pivot_table_index 
    # @param [Hash] opts the optional parameters
    # @option opts [PivotFilter] :filter 
    # @option opts [BOOLEAN] :need_re_calculate  (default to false)
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_pivot_tables_put_worksheet_pivot_table_filter(name, sheet_name, pivot_table_index, opts = {})
      data, _status_code, _headers = cells_pivot_tables_put_worksheet_pivot_table_filter_with_http_info(name, sheet_name, pivot_table_index, opts)
      return data
    end

    # Add pivot filter for piovt table index
    # 
    # @param name 
    # @param sheet_name 
    # @param pivot_table_index 
    # @param [Hash] opts the optional parameters
    # @option opts [PivotFilter] :filter 
    # @option opts [BOOLEAN] :need_re_calculate 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_pivot_tables_put_worksheet_pivot_table_filter_with_http_info(name, sheet_name, pivot_table_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsPivotTablesApi.cells_pivot_tables_put_worksheet_pivot_table_filter ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsPivotTablesApi.cells_pivot_tables_put_worksheet_pivot_table_filter"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsPivotTablesApi.cells_pivot_tables_put_worksheet_pivot_table_filter"
      end
      # verify the required parameter 'pivot_table_index' is set
      if @api_client.config.client_side_validation && pivot_table_index.nil?
        fail ArgumentError, "Missing the required parameter 'pivot_table_index' when calling CellsPivotTablesApi.cells_pivot_tables_put_worksheet_pivot_table_filter"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/pivottables/{pivotTableIndex}/PivotFilters".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'pivotTableIndex' + '}', pivot_table_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'needReCalculate'] = opts[:'need_re_calculate'] if !opts[:'need_re_calculate'].nil?
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'filter'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsPivotTablesApi#cells_pivot_tables_put_worksheet_pivot_table_filter\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
