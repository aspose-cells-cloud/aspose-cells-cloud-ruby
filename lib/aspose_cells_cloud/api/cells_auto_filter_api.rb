=begin
#Web API Swagger specification

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require "uri"

module AsposeCellsCloud
  class CellsAutoFilterApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Removes a date filter.             
    # 
    # @param name 
    # @param sheet_name 
    # @param field_index 
    # @param date_time_grouping_type 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :year  (default to 0)
    # @option opts [Integer] :month  (default to 0)
    # @option opts [Integer] :day  (default to 0)
    # @option opts [Integer] :hour  (default to 0)
    # @option opts [Integer] :minute  (default to 0)
    # @option opts [Integer] :second  (default to 0)
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_auto_filter_delete_worksheet_date_filter(name, sheet_name, field_index, date_time_grouping_type, opts = {})
      data, _status_code, _headers = cells_auto_filter_delete_worksheet_date_filter_with_http_info(name, sheet_name, field_index, date_time_grouping_type, opts)
      return data
    end

    # Removes a date filter.             
    # 
    # @param name 
    # @param sheet_name 
    # @param field_index 
    # @param date_time_grouping_type 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :year 
    # @option opts [Integer] :month 
    # @option opts [Integer] :day 
    # @option opts [Integer] :hour 
    # @option opts [Integer] :minute 
    # @option opts [Integer] :second 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_auto_filter_delete_worksheet_date_filter_with_http_info(name, sheet_name, field_index, date_time_grouping_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsAutoFilterApi.cells_auto_filter_delete_worksheet_date_filter ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsAutoFilterApi.cells_auto_filter_delete_worksheet_date_filter"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsAutoFilterApi.cells_auto_filter_delete_worksheet_date_filter"
      end
      # verify the required parameter 'field_index' is set
      if @api_client.config.client_side_validation && field_index.nil?
        fail ArgumentError, "Missing the required parameter 'field_index' when calling CellsAutoFilterApi.cells_auto_filter_delete_worksheet_date_filter"
      end
      # verify the required parameter 'date_time_grouping_type' is set
      if @api_client.config.client_side_validation && date_time_grouping_type.nil?
        fail ArgumentError, "Missing the required parameter 'date_time_grouping_type' when calling CellsAutoFilterApi.cells_auto_filter_delete_worksheet_date_filter"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/autoFilter/dateFilter".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'fieldIndex'] = field_index
      query_params[:'dateTimeGroupingType'] = date_time_grouping_type
      query_params[:'year'] = opts[:'year'] if !opts[:'year'].nil?
      query_params[:'month'] = opts[:'month'] if !opts[:'month'].nil?
      query_params[:'day'] = opts[:'day'] if !opts[:'day'].nil?
      query_params[:'hour'] = opts[:'hour'] if !opts[:'hour'].nil?
      query_params[:'minute'] = opts[:'minute'] if !opts[:'minute'].nil?
      query_params[:'second'] = opts[:'second'] if !opts[:'second'].nil?
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsAutoFilterApi#cells_auto_filter_delete_worksheet_date_filter\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete a filter for a filter column.             
    # 
    # @param name 
    # @param sheet_name 
    # @param field_index 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :criteria 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_auto_filter_delete_worksheet_filter(name, sheet_name, field_index, opts = {})
      data, _status_code, _headers = cells_auto_filter_delete_worksheet_filter_with_http_info(name, sheet_name, field_index, opts)
      return data
    end

    # Delete a filter for a filter column.             
    # 
    # @param name 
    # @param sheet_name 
    # @param field_index 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :criteria 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_auto_filter_delete_worksheet_filter_with_http_info(name, sheet_name, field_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsAutoFilterApi.cells_auto_filter_delete_worksheet_filter ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsAutoFilterApi.cells_auto_filter_delete_worksheet_filter"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsAutoFilterApi.cells_auto_filter_delete_worksheet_filter"
      end
      # verify the required parameter 'field_index' is set
      if @api_client.config.client_side_validation && field_index.nil?
        fail ArgumentError, "Missing the required parameter 'field_index' when calling CellsAutoFilterApi.cells_auto_filter_delete_worksheet_filter"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/autoFilter/filter".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'fieldIndex'] = field_index
      query_params[:'criteria'] = opts[:'criteria'] if !opts[:'criteria'].nil?
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsAutoFilterApi#cells_auto_filter_delete_worksheet_filter\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Auto filter Description
    # 
    # @param name 
    # @param sheet_name 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [AutoFilterResponse]
    def cells_auto_filter_get_worksheet_auto_filter(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_auto_filter_get_worksheet_auto_filter_with_http_info(name, sheet_name, opts)
      return data
    end

    # Get Auto filter Description
    # 
    # @param name 
    # @param sheet_name 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(AutoFilterResponse, Fixnum, Hash)>] AutoFilterResponse data, response status code and response headers
    def cells_auto_filter_get_worksheet_auto_filter_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsAutoFilterApi.cells_auto_filter_get_worksheet_auto_filter ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsAutoFilterApi.cells_auto_filter_get_worksheet_auto_filter"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsAutoFilterApi.cells_auto_filter_get_worksheet_auto_filter"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/autoFilter".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AutoFilterResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsAutoFilterApi#cells_auto_filter_get_worksheet_auto_filter\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_auto_filter_post_worksheet_auto_filter_refresh(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_auto_filter_post_worksheet_auto_filter_refresh_with_http_info(name, sheet_name, opts)
      return data
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_auto_filter_post_worksheet_auto_filter_refresh_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsAutoFilterApi.cells_auto_filter_post_worksheet_auto_filter_refresh ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsAutoFilterApi.cells_auto_filter_post_worksheet_auto_filter_refresh"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsAutoFilterApi.cells_auto_filter_post_worksheet_auto_filter_refresh"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/autoFilter/refresh".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsAutoFilterApi#cells_auto_filter_post_worksheet_auto_filter_refresh\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Match all blank cell in the list.
    # 
    # @param name 
    # @param sheet_name 
    # @param field_index 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_auto_filter_post_worksheet_match_blanks(name, sheet_name, field_index, opts = {})
      data, _status_code, _headers = cells_auto_filter_post_worksheet_match_blanks_with_http_info(name, sheet_name, field_index, opts)
      return data
    end

    # Match all blank cell in the list.
    # 
    # @param name 
    # @param sheet_name 
    # @param field_index 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_auto_filter_post_worksheet_match_blanks_with_http_info(name, sheet_name, field_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsAutoFilterApi.cells_auto_filter_post_worksheet_match_blanks ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsAutoFilterApi.cells_auto_filter_post_worksheet_match_blanks"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsAutoFilterApi.cells_auto_filter_post_worksheet_match_blanks"
      end
      # verify the required parameter 'field_index' is set
      if @api_client.config.client_side_validation && field_index.nil?
        fail ArgumentError, "Missing the required parameter 'field_index' when calling CellsAutoFilterApi.cells_auto_filter_post_worksheet_match_blanks"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/autoFilter/matchBlanks".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'fieldIndex'] = field_index
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsAutoFilterApi#cells_auto_filter_post_worksheet_match_blanks\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Match all not blank cell in the list.             
    # 
    # @param name 
    # @param sheet_name 
    # @param field_index 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_auto_filter_post_worksheet_match_non_blanks(name, sheet_name, field_index, opts = {})
      data, _status_code, _headers = cells_auto_filter_post_worksheet_match_non_blanks_with_http_info(name, sheet_name, field_index, opts)
      return data
    end

    # Match all not blank cell in the list.             
    # 
    # @param name 
    # @param sheet_name 
    # @param field_index 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_auto_filter_post_worksheet_match_non_blanks_with_http_info(name, sheet_name, field_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsAutoFilterApi.cells_auto_filter_post_worksheet_match_non_blanks ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsAutoFilterApi.cells_auto_filter_post_worksheet_match_non_blanks"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsAutoFilterApi.cells_auto_filter_post_worksheet_match_non_blanks"
      end
      # verify the required parameter 'field_index' is set
      if @api_client.config.client_side_validation && field_index.nil?
        fail ArgumentError, "Missing the required parameter 'field_index' when calling CellsAutoFilterApi.cells_auto_filter_post_worksheet_match_non_blanks"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/autoFilter/matchNonBlanks".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'fieldIndex'] = field_index
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsAutoFilterApi#cells_auto_filter_post_worksheet_match_non_blanks\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param range 
    # @param field_index 
    # @param [Hash] opts the optional parameters
    # @option opts [ColorFilterRequest] :color_filter 
    # @option opts [BOOLEAN] :match_blanks 
    # @option opts [BOOLEAN] :refresh 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_auto_filter_put_worksheet_color_filter(name, sheet_name, range, field_index, opts = {})
      data, _status_code, _headers = cells_auto_filter_put_worksheet_color_filter_with_http_info(name, sheet_name, range, field_index, opts)
      return data
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param range 
    # @param field_index 
    # @param [Hash] opts the optional parameters
    # @option opts [ColorFilterRequest] :color_filter 
    # @option opts [BOOLEAN] :match_blanks 
    # @option opts [BOOLEAN] :refresh 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_auto_filter_put_worksheet_color_filter_with_http_info(name, sheet_name, range, field_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsAutoFilterApi.cells_auto_filter_put_worksheet_color_filter ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_color_filter"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_color_filter"
      end
      # verify the required parameter 'range' is set
      if @api_client.config.client_side_validation && range.nil?
        fail ArgumentError, "Missing the required parameter 'range' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_color_filter"
      end
      # verify the required parameter 'field_index' is set
      if @api_client.config.client_side_validation && field_index.nil?
        fail ArgumentError, "Missing the required parameter 'field_index' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_color_filter"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/autoFilter/colorFilter".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'range'] = range
      query_params[:'fieldIndex'] = field_index
      query_params[:'matchBlanks'] = opts[:'match_blanks'] if !opts[:'match_blanks'].nil?
      query_params[:'refresh'] = opts[:'refresh'] if !opts[:'refresh'].nil?
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'color_filter'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsAutoFilterApi#cells_auto_filter_put_worksheet_color_filter\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Filters a list with a custom criteria.             
    # 
    # @param name 
    # @param sheet_name 
    # @param range 
    # @param field_index 
    # @param operator_type1 
    # @param criteria1 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :is_and 
    # @option opts [String] :operator_type2 
    # @option opts [String] :criteria2 
    # @option opts [BOOLEAN] :match_blanks 
    # @option opts [BOOLEAN] :refresh 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_auto_filter_put_worksheet_custom_filter(name, sheet_name, range, field_index, operator_type1, criteria1, opts = {})
      data, _status_code, _headers = cells_auto_filter_put_worksheet_custom_filter_with_http_info(name, sheet_name, range, field_index, operator_type1, criteria1, opts)
      return data
    end

    # Filters a list with a custom criteria.             
    # 
    # @param name 
    # @param sheet_name 
    # @param range 
    # @param field_index 
    # @param operator_type1 
    # @param criteria1 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :is_and 
    # @option opts [String] :operator_type2 
    # @option opts [String] :criteria2 
    # @option opts [BOOLEAN] :match_blanks 
    # @option opts [BOOLEAN] :refresh 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_auto_filter_put_worksheet_custom_filter_with_http_info(name, sheet_name, range, field_index, operator_type1, criteria1, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsAutoFilterApi.cells_auto_filter_put_worksheet_custom_filter ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_custom_filter"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_custom_filter"
      end
      # verify the required parameter 'range' is set
      if @api_client.config.client_side_validation && range.nil?
        fail ArgumentError, "Missing the required parameter 'range' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_custom_filter"
      end
      # verify the required parameter 'field_index' is set
      if @api_client.config.client_side_validation && field_index.nil?
        fail ArgumentError, "Missing the required parameter 'field_index' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_custom_filter"
      end
      # verify the required parameter 'operator_type1' is set
      if @api_client.config.client_side_validation && operator_type1.nil?
        fail ArgumentError, "Missing the required parameter 'operator_type1' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_custom_filter"
      end
      # verify the required parameter 'criteria1' is set
      if @api_client.config.client_side_validation && criteria1.nil?
        fail ArgumentError, "Missing the required parameter 'criteria1' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_custom_filter"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/autoFilter/custom".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'range'] = range
      query_params[:'fieldIndex'] = field_index
      query_params[:'operatorType1'] = operator_type1
      query_params[:'criteria1'] = criteria1
      query_params[:'isAnd'] = opts[:'is_and'] if !opts[:'is_and'].nil?
      query_params[:'operatorType2'] = opts[:'operator_type2'] if !opts[:'operator_type2'].nil?
      query_params[:'criteria2'] = opts[:'criteria2'] if !opts[:'criteria2'].nil?
      query_params[:'matchBlanks'] = opts[:'match_blanks'] if !opts[:'match_blanks'].nil?
      query_params[:'refresh'] = opts[:'refresh'] if !opts[:'refresh'].nil?
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsAutoFilterApi#cells_auto_filter_put_worksheet_custom_filter\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # add date filter in worksheet 
    # 
    # @param name 
    # @param sheet_name 
    # @param range 
    # @param field_index 
    # @param date_time_grouping_type 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :year  (default to 0)
    # @option opts [Integer] :month  (default to 0)
    # @option opts [Integer] :day  (default to 0)
    # @option opts [Integer] :hour  (default to 0)
    # @option opts [Integer] :minute  (default to 0)
    # @option opts [Integer] :second  (default to 0)
    # @option opts [BOOLEAN] :match_blanks 
    # @option opts [BOOLEAN] :refresh 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_auto_filter_put_worksheet_date_filter(name, sheet_name, range, field_index, date_time_grouping_type, opts = {})
      data, _status_code, _headers = cells_auto_filter_put_worksheet_date_filter_with_http_info(name, sheet_name, range, field_index, date_time_grouping_type, opts)
      return data
    end

    # add date filter in worksheet 
    # 
    # @param name 
    # @param sheet_name 
    # @param range 
    # @param field_index 
    # @param date_time_grouping_type 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :year 
    # @option opts [Integer] :month 
    # @option opts [Integer] :day 
    # @option opts [Integer] :hour 
    # @option opts [Integer] :minute 
    # @option opts [Integer] :second 
    # @option opts [BOOLEAN] :match_blanks 
    # @option opts [BOOLEAN] :refresh 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_auto_filter_put_worksheet_date_filter_with_http_info(name, sheet_name, range, field_index, date_time_grouping_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsAutoFilterApi.cells_auto_filter_put_worksheet_date_filter ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_date_filter"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_date_filter"
      end
      # verify the required parameter 'range' is set
      if @api_client.config.client_side_validation && range.nil?
        fail ArgumentError, "Missing the required parameter 'range' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_date_filter"
      end
      # verify the required parameter 'field_index' is set
      if @api_client.config.client_side_validation && field_index.nil?
        fail ArgumentError, "Missing the required parameter 'field_index' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_date_filter"
      end
      # verify the required parameter 'date_time_grouping_type' is set
      if @api_client.config.client_side_validation && date_time_grouping_type.nil?
        fail ArgumentError, "Missing the required parameter 'date_time_grouping_type' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_date_filter"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/autoFilter/dateFilter".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'range'] = range
      query_params[:'fieldIndex'] = field_index
      query_params[:'dateTimeGroupingType'] = date_time_grouping_type
      query_params[:'year'] = opts[:'year'] if !opts[:'year'].nil?
      query_params[:'month'] = opts[:'month'] if !opts[:'month'].nil?
      query_params[:'day'] = opts[:'day'] if !opts[:'day'].nil?
      query_params[:'hour'] = opts[:'hour'] if !opts[:'hour'].nil?
      query_params[:'minute'] = opts[:'minute'] if !opts[:'minute'].nil?
      query_params[:'second'] = opts[:'second'] if !opts[:'second'].nil?
      query_params[:'matchBlanks'] = opts[:'match_blanks'] if !opts[:'match_blanks'].nil?
      query_params[:'refresh'] = opts[:'refresh'] if !opts[:'refresh'].nil?
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsAutoFilterApi#cells_auto_filter_put_worksheet_date_filter\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param range 
    # @param field_index 
    # @param dynamic_filter_type 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :match_blanks 
    # @option opts [BOOLEAN] :refresh 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_auto_filter_put_worksheet_dynamic_filter(name, sheet_name, range, field_index, dynamic_filter_type, opts = {})
      data, _status_code, _headers = cells_auto_filter_put_worksheet_dynamic_filter_with_http_info(name, sheet_name, range, field_index, dynamic_filter_type, opts)
      return data
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param range 
    # @param field_index 
    # @param dynamic_filter_type 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :match_blanks 
    # @option opts [BOOLEAN] :refresh 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_auto_filter_put_worksheet_dynamic_filter_with_http_info(name, sheet_name, range, field_index, dynamic_filter_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsAutoFilterApi.cells_auto_filter_put_worksheet_dynamic_filter ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_dynamic_filter"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_dynamic_filter"
      end
      # verify the required parameter 'range' is set
      if @api_client.config.client_side_validation && range.nil?
        fail ArgumentError, "Missing the required parameter 'range' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_dynamic_filter"
      end
      # verify the required parameter 'field_index' is set
      if @api_client.config.client_side_validation && field_index.nil?
        fail ArgumentError, "Missing the required parameter 'field_index' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_dynamic_filter"
      end
      # verify the required parameter 'dynamic_filter_type' is set
      if @api_client.config.client_side_validation && dynamic_filter_type.nil?
        fail ArgumentError, "Missing the required parameter 'dynamic_filter_type' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_dynamic_filter"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/autoFilter/dynamicFilter".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'range'] = range
      query_params[:'fieldIndex'] = field_index
      query_params[:'dynamicFilterType'] = dynamic_filter_type
      query_params[:'matchBlanks'] = opts[:'match_blanks'] if !opts[:'match_blanks'].nil?
      query_params[:'refresh'] = opts[:'refresh'] if !opts[:'refresh'].nil?
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsAutoFilterApi#cells_auto_filter_put_worksheet_dynamic_filter\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Adds a filter for a filter column.             
    # 
    # @param name 
    # @param sheet_name 
    # @param range 
    # @param field_index 
    # @param criteria 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :match_blanks 
    # @option opts [BOOLEAN] :refresh 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_auto_filter_put_worksheet_filter(name, sheet_name, range, field_index, criteria, opts = {})
      data, _status_code, _headers = cells_auto_filter_put_worksheet_filter_with_http_info(name, sheet_name, range, field_index, criteria, opts)
      return data
    end

    # Adds a filter for a filter column.             
    # 
    # @param name 
    # @param sheet_name 
    # @param range 
    # @param field_index 
    # @param criteria 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :match_blanks 
    # @option opts [BOOLEAN] :refresh 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_auto_filter_put_worksheet_filter_with_http_info(name, sheet_name, range, field_index, criteria, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsAutoFilterApi.cells_auto_filter_put_worksheet_filter ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_filter"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_filter"
      end
      # verify the required parameter 'range' is set
      if @api_client.config.client_side_validation && range.nil?
        fail ArgumentError, "Missing the required parameter 'range' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_filter"
      end
      # verify the required parameter 'field_index' is set
      if @api_client.config.client_side_validation && field_index.nil?
        fail ArgumentError, "Missing the required parameter 'field_index' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_filter"
      end
      # verify the required parameter 'criteria' is set
      if @api_client.config.client_side_validation && criteria.nil?
        fail ArgumentError, "Missing the required parameter 'criteria' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_filter"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/autoFilter/filter".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'range'] = range
      query_params[:'fieldIndex'] = field_index
      query_params[:'criteria'] = criteria
      query_params[:'matchBlanks'] = opts[:'match_blanks'] if !opts[:'match_blanks'].nil?
      query_params[:'refresh'] = opts[:'refresh'] if !opts[:'refresh'].nil?
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsAutoFilterApi#cells_auto_filter_put_worksheet_filter\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Filter the top 10 item in the list
    # 
    # @param name 
    # @param sheet_name 
    # @param range 
    # @param field_index 
    # @param is_top 
    # @param is_percent 
    # @param item_count 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :match_blanks 
    # @option opts [BOOLEAN] :refresh 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_auto_filter_put_worksheet_filter_top10(name, sheet_name, range, field_index, is_top, is_percent, item_count, opts = {})
      data, _status_code, _headers = cells_auto_filter_put_worksheet_filter_top10_with_http_info(name, sheet_name, range, field_index, is_top, is_percent, item_count, opts)
      return data
    end

    # Filter the top 10 item in the list
    # 
    # @param name 
    # @param sheet_name 
    # @param range 
    # @param field_index 
    # @param is_top 
    # @param is_percent 
    # @param item_count 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :match_blanks 
    # @option opts [BOOLEAN] :refresh 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_auto_filter_put_worksheet_filter_top10_with_http_info(name, sheet_name, range, field_index, is_top, is_percent, item_count, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsAutoFilterApi.cells_auto_filter_put_worksheet_filter_top10 ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_filter_top10"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_filter_top10"
      end
      # verify the required parameter 'range' is set
      if @api_client.config.client_side_validation && range.nil?
        fail ArgumentError, "Missing the required parameter 'range' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_filter_top10"
      end
      # verify the required parameter 'field_index' is set
      if @api_client.config.client_side_validation && field_index.nil?
        fail ArgumentError, "Missing the required parameter 'field_index' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_filter_top10"
      end
      # verify the required parameter 'is_top' is set
      if @api_client.config.client_side_validation && is_top.nil?
        fail ArgumentError, "Missing the required parameter 'is_top' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_filter_top10"
      end
      # verify the required parameter 'is_percent' is set
      if @api_client.config.client_side_validation && is_percent.nil?
        fail ArgumentError, "Missing the required parameter 'is_percent' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_filter_top10"
      end
      # verify the required parameter 'item_count' is set
      if @api_client.config.client_side_validation && item_count.nil?
        fail ArgumentError, "Missing the required parameter 'item_count' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_filter_top10"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/autoFilter/filterTop10".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'range'] = range
      query_params[:'fieldIndex'] = field_index
      query_params[:'isTop'] = is_top
      query_params[:'isPercent'] = is_percent
      query_params[:'itemCount'] = item_count
      query_params[:'matchBlanks'] = opts[:'match_blanks'] if !opts[:'match_blanks'].nil?
      query_params[:'refresh'] = opts[:'refresh'] if !opts[:'refresh'].nil?
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsAutoFilterApi#cells_auto_filter_put_worksheet_filter_top10\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Adds an icon filter.
    # 
    # @param name 
    # @param sheet_name 
    # @param range 
    # @param field_index 
    # @param icon_set_type 
    # @param icon_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :match_blanks 
    # @option opts [BOOLEAN] :refresh 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_auto_filter_put_worksheet_icon_filter(name, sheet_name, range, field_index, icon_set_type, icon_id, opts = {})
      data, _status_code, _headers = cells_auto_filter_put_worksheet_icon_filter_with_http_info(name, sheet_name, range, field_index, icon_set_type, icon_id, opts)
      return data
    end

    # Adds an icon filter.
    # 
    # @param name 
    # @param sheet_name 
    # @param range 
    # @param field_index 
    # @param icon_set_type 
    # @param icon_id 
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :match_blanks 
    # @option opts [BOOLEAN] :refresh 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_auto_filter_put_worksheet_icon_filter_with_http_info(name, sheet_name, range, field_index, icon_set_type, icon_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsAutoFilterApi.cells_auto_filter_put_worksheet_icon_filter ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_icon_filter"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_icon_filter"
      end
      # verify the required parameter 'range' is set
      if @api_client.config.client_side_validation && range.nil?
        fail ArgumentError, "Missing the required parameter 'range' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_icon_filter"
      end
      # verify the required parameter 'field_index' is set
      if @api_client.config.client_side_validation && field_index.nil?
        fail ArgumentError, "Missing the required parameter 'field_index' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_icon_filter"
      end
      # verify the required parameter 'icon_set_type' is set
      if @api_client.config.client_side_validation && icon_set_type.nil?
        fail ArgumentError, "Missing the required parameter 'icon_set_type' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_icon_filter"
      end
      # verify the required parameter 'icon_id' is set
      if @api_client.config.client_side_validation && icon_id.nil?
        fail ArgumentError, "Missing the required parameter 'icon_id' when calling CellsAutoFilterApi.cells_auto_filter_put_worksheet_icon_filter"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/autoFilter/iconFilter".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'range'] = range
      query_params[:'fieldIndex'] = field_index
      query_params[:'iconSetType'] = icon_set_type
      query_params[:'iconId'] = icon_id
      query_params[:'matchBlanks'] = opts[:'match_blanks'] if !opts[:'match_blanks'].nil?
      query_params[:'refresh'] = opts[:'refresh'] if !opts[:'refresh'].nil?
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsAutoFilterApi#cells_auto_filter_put_worksheet_icon_filter\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
