=begin
#Web API Swagger specification

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require "uri"

module AsposeCellsCloud
  class CellsRangesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Get cells list in a range by range name or row column indexes  
    # 
    # @param name workbook name
    # @param sheet_name worksheet name
    # @param [Hash] opts the optional parameters
    # @option opts [String] :namerange range name, for example: &#39;A1:B2&#39; or &#39;range_name1&#39;
    # @option opts [Integer] :first_row the first row of the range
    # @option opts [Integer] :first_column the first column of the range
    # @option opts [Integer] :row_count the count of rows in the range
    # @option opts [Integer] :column_count the count of columns in the range
    # @option opts [String] :folder Workbook folder.
    # @option opts [String] :storage storage name.
    # @return [RangeValueResponse]
    def cells_ranges_get_worksheet_cells_range_value(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_ranges_get_worksheet_cells_range_value_with_http_info(name, sheet_name, opts)
      return data
    end

    # Get cells list in a range by range name or row column indexes  
    # 
    # @param name workbook name
    # @param sheet_name worksheet name
    # @param [Hash] opts the optional parameters
    # @option opts [String] :namerange range name, for example: &#39;A1:B2&#39; or &#39;range_name1&#39;
    # @option opts [Integer] :first_row the first row of the range
    # @option opts [Integer] :first_column the first column of the range
    # @option opts [Integer] :row_count the count of rows in the range
    # @option opts [Integer] :column_count the count of columns in the range
    # @option opts [String] :folder Workbook folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(RangeValueResponse, Fixnum, Hash)>] RangeValueResponse data, response status code and response headers
    def cells_ranges_get_worksheet_cells_range_value_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsRangesApi.cells_ranges_get_worksheet_cells_range_value ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsRangesApi.cells_ranges_get_worksheet_cells_range_value"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsRangesApi.cells_ranges_get_worksheet_cells_range_value"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/ranges/value".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'namerange'] = opts[:'namerange'] if !opts[:'namerange'].nil?
      query_params[:'firstRow'] = opts[:'first_row'] if !opts[:'first_row'].nil?
      query_params[:'firstColumn'] = opts[:'first_column'] if !opts[:'first_column'].nil?
      query_params[:'rowCount'] = opts[:'row_count'] if !opts[:'row_count'].nil?
      query_params[:'columnCount'] = opts[:'column_count'] if !opts[:'column_count'].nil?
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'RangeValueResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsRangesApi#cells_ranges_get_worksheet_cells_range_value\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Set column width of range
    # 
    # @param name 
    # @param sheet_name 
    # @param value 
    # @param [Hash] opts the optional parameters
    # @option opts [Range] :range 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_ranges_post_worksheet_cells_range_column_width(name, sheet_name, value, opts = {})
      data, _status_code, _headers = cells_ranges_post_worksheet_cells_range_column_width_with_http_info(name, sheet_name, value, opts)
      return data
    end

    # Set column width of range
    # 
    # @param name 
    # @param sheet_name 
    # @param value 
    # @param [Hash] opts the optional parameters
    # @option opts [Range] :range 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_ranges_post_worksheet_cells_range_column_width_with_http_info(name, sheet_name, value, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsRangesApi.cells_ranges_post_worksheet_cells_range_column_width ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_column_width"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_column_width"
      end
      # verify the required parameter 'value' is set
      if @api_client.config.client_side_validation && value.nil?
        fail ArgumentError, "Missing the required parameter 'value' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_column_width"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/ranges/columnWidth".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'value'] = value
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'range'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsRangesApi#cells_ranges_post_worksheet_cells_range_column_width\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Combines a range of cells into a single cell.              
    # 
    # @param name workbook name
    # @param sheet_name worksheet name
    # @param [Hash] opts the optional parameters
    # @option opts [Range] :range range in worksheet 
    # @option opts [String] :folder Workbook folder.
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_ranges_post_worksheet_cells_range_merge(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_ranges_post_worksheet_cells_range_merge_with_http_info(name, sheet_name, opts)
      return data
    end

    # Combines a range of cells into a single cell.              
    # 
    # @param name workbook name
    # @param sheet_name worksheet name
    # @param [Hash] opts the optional parameters
    # @option opts [Range] :range range in worksheet 
    # @option opts [String] :folder Workbook folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_ranges_post_worksheet_cells_range_merge_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsRangesApi.cells_ranges_post_worksheet_cells_range_merge ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_merge"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_merge"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/ranges/merge".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'range'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsRangesApi#cells_ranges_post_worksheet_cells_range_merge\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Move the current range to the dest range.             
    # 
    # @param name workbook name
    # @param sheet_name worksheet name
    # @param dest_row The start row of the dest range.
    # @param dest_column The start column of the dest range.
    # @param [Hash] opts the optional parameters
    # @option opts [Range] :range range in worksheet 
    # @option opts [String] :folder Workbook folder.
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_ranges_post_worksheet_cells_range_move_to(name, sheet_name, dest_row, dest_column, opts = {})
      data, _status_code, _headers = cells_ranges_post_worksheet_cells_range_move_to_with_http_info(name, sheet_name, dest_row, dest_column, opts)
      return data
    end

    # Move the current range to the dest range.             
    # 
    # @param name workbook name
    # @param sheet_name worksheet name
    # @param dest_row The start row of the dest range.
    # @param dest_column The start column of the dest range.
    # @param [Hash] opts the optional parameters
    # @option opts [Range] :range range in worksheet 
    # @option opts [String] :folder Workbook folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_ranges_post_worksheet_cells_range_move_to_with_http_info(name, sheet_name, dest_row, dest_column, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsRangesApi.cells_ranges_post_worksheet_cells_range_move_to ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_move_to"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_move_to"
      end
      # verify the required parameter 'dest_row' is set
      if @api_client.config.client_side_validation && dest_row.nil?
        fail ArgumentError, "Missing the required parameter 'dest_row' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_move_to"
      end
      # verify the required parameter 'dest_column' is set
      if @api_client.config.client_side_validation && dest_column.nil?
        fail ArgumentError, "Missing the required parameter 'dest_column' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_move_to"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/ranges/moveto".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'destRow'] = dest_row
      query_params[:'destColumn'] = dest_column
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'range'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsRangesApi#cells_ranges_post_worksheet_cells_range_move_to\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Sets outline border around a range of cells.
    # 
    # @param name workbook name
    # @param sheet_name worksheet name
    # @param [Hash] opts the optional parameters
    # @option opts [RangeSetOutlineBorderRequest] :range_operate Range Set OutlineBorder Request 
    # @option opts [String] :folder Workbook folder.
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_ranges_post_worksheet_cells_range_outline_border(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_ranges_post_worksheet_cells_range_outline_border_with_http_info(name, sheet_name, opts)
      return data
    end

    # Sets outline border around a range of cells.
    # 
    # @param name workbook name
    # @param sheet_name worksheet name
    # @param [Hash] opts the optional parameters
    # @option opts [RangeSetOutlineBorderRequest] :range_operate Range Set OutlineBorder Request 
    # @option opts [String] :folder Workbook folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_ranges_post_worksheet_cells_range_outline_border_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsRangesApi.cells_ranges_post_worksheet_cells_range_outline_border ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_outline_border"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_outline_border"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/ranges/outlineBorder".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'range_operate'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsRangesApi#cells_ranges_post_worksheet_cells_range_outline_border\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # set row height of range
    # 
    # @param name 
    # @param sheet_name 
    # @param value 
    # @param [Hash] opts the optional parameters
    # @option opts [Range] :range 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_ranges_post_worksheet_cells_range_row_height(name, sheet_name, value, opts = {})
      data, _status_code, _headers = cells_ranges_post_worksheet_cells_range_row_height_with_http_info(name, sheet_name, value, opts)
      return data
    end

    # set row height of range
    # 
    # @param name 
    # @param sheet_name 
    # @param value 
    # @param [Hash] opts the optional parameters
    # @option opts [Range] :range 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_ranges_post_worksheet_cells_range_row_height_with_http_info(name, sheet_name, value, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsRangesApi.cells_ranges_post_worksheet_cells_range_row_height ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_row_height"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_row_height"
      end
      # verify the required parameter 'value' is set
      if @api_client.config.client_side_validation && value.nil?
        fail ArgumentError, "Missing the required parameter 'value' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_row_height"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/ranges/rowHeight".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'value'] = value
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'range'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsRangesApi#cells_ranges_post_worksheet_cells_range_row_height\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Sets the style of the range.             
    # 
    # @param name workbook name
    # @param sheet_name worksheet name
    # @param [Hash] opts the optional parameters
    # @option opts [RangeSetStyleRequest] :range_operate Range Set Style Request 
    # @option opts [String] :folder Workbook folder.
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_ranges_post_worksheet_cells_range_style(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_ranges_post_worksheet_cells_range_style_with_http_info(name, sheet_name, opts)
      return data
    end

    # Sets the style of the range.             
    # 
    # @param name workbook name
    # @param sheet_name worksheet name
    # @param [Hash] opts the optional parameters
    # @option opts [RangeSetStyleRequest] :range_operate Range Set Style Request 
    # @option opts [String] :folder Workbook folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_ranges_post_worksheet_cells_range_style_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsRangesApi.cells_ranges_post_worksheet_cells_range_style ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_style"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_style"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/ranges/style".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'range_operate'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsRangesApi#cells_ranges_post_worksheet_cells_range_style\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Unmerges merged cells of this range.             
    # 
    # @param name workbook name
    # @param sheet_name worksheet name
    # @param [Hash] opts the optional parameters
    # @option opts [Range] :range range in worksheet 
    # @option opts [String] :folder Workbook folder.
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_ranges_post_worksheet_cells_range_unmerge(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_ranges_post_worksheet_cells_range_unmerge_with_http_info(name, sheet_name, opts)
      return data
    end

    # Unmerges merged cells of this range.             
    # 
    # @param name workbook name
    # @param sheet_name worksheet name
    # @param [Hash] opts the optional parameters
    # @option opts [Range] :range range in worksheet 
    # @option opts [String] :folder Workbook folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_ranges_post_worksheet_cells_range_unmerge_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsRangesApi.cells_ranges_post_worksheet_cells_range_unmerge ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_unmerge"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_unmerge"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/ranges/unmerge".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'range'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsRangesApi#cells_ranges_post_worksheet_cells_range_unmerge\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Puts a value into the range, if appropriate the value will be converted to other data type and cell's number format will be reset.             
    # 
    # @param name workbook name
    # @param sheet_name worksheet name
    # @param value Input value
    # @param [Hash] opts the optional parameters
    # @option opts [Range] :range range in worksheet 
    # @option opts [BOOLEAN] :is_converted True: converted to other data type if appropriate. (default to false)
    # @option opts [BOOLEAN] :set_style True: set the number format to cell&#39;s style when converting to other data type (default to false)
    # @option opts [String] :folder Workbook folder.
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_ranges_post_worksheet_cells_range_value(name, sheet_name, value, opts = {})
      data, _status_code, _headers = cells_ranges_post_worksheet_cells_range_value_with_http_info(name, sheet_name, value, opts)
      return data
    end

    # Puts a value into the range, if appropriate the value will be converted to other data type and cell&#39;s number format will be reset.             
    # 
    # @param name workbook name
    # @param sheet_name worksheet name
    # @param value Input value
    # @param [Hash] opts the optional parameters
    # @option opts [Range] :range range in worksheet 
    # @option opts [BOOLEAN] :is_converted True: converted to other data type if appropriate.
    # @option opts [BOOLEAN] :set_style True: set the number format to cell&#39;s style when converting to other data type
    # @option opts [String] :folder Workbook folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_ranges_post_worksheet_cells_range_value_with_http_info(name, sheet_name, value, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsRangesApi.cells_ranges_post_worksheet_cells_range_value ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_value"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_value"
      end
      # verify the required parameter 'value' is set
      if @api_client.config.client_side_validation && value.nil?
        fail ArgumentError, "Missing the required parameter 'value' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_range_value"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/ranges/value".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'Value'] = value
      query_params[:'isConverted'] = opts[:'is_converted'] if !opts[:'is_converted'].nil?
      query_params[:'setStyle'] = opts[:'set_style'] if !opts[:'set_style'].nil?
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'range'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsRangesApi#cells_ranges_post_worksheet_cells_range_value\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # copy range in the worksheet
    # 
    # @param name workbook name
    # @param sheet_name worksheet name
    # @param [Hash] opts the optional parameters
    # @option opts [RangeCopyRequest] :range_operate copydata,copystyle,copyto,copyvalue
    # @option opts [String] :folder Workbook folder.
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_ranges_post_worksheet_cells_ranges(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_ranges_post_worksheet_cells_ranges_with_http_info(name, sheet_name, opts)
      return data
    end

    # copy range in the worksheet
    # 
    # @param name workbook name
    # @param sheet_name worksheet name
    # @param [Hash] opts the optional parameters
    # @option opts [RangeCopyRequest] :range_operate copydata,copystyle,copyto,copyvalue
    # @option opts [String] :folder Workbook folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_ranges_post_worksheet_cells_ranges_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsRangesApi.cells_ranges_post_worksheet_cells_ranges ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_ranges"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsRangesApi.cells_ranges_post_worksheet_cells_ranges"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/ranges".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'range_operate'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsRangesApi#cells_ranges_post_worksheet_cells_ranges\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
