=begin
#Web API Swagger specification

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require "uri"

module AsposeCellsCloud
  class CellsHypelinksApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Delete worksheet hyperlink by index.
    # 
    # @param name Document name.
    # @param sheet_name Worksheet name.
    # @param hyperlink_index The hyperlink&#39;s index.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder The document folder.
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_hypelinks_delete_worksheet_hyperlink(name, sheet_name, hyperlink_index, opts = {})
      data, _status_code, _headers = cells_hypelinks_delete_worksheet_hyperlink_with_http_info(name, sheet_name, hyperlink_index, opts)
      return data
    end

    # Delete worksheet hyperlink by index.
    # 
    # @param name Document name.
    # @param sheet_name Worksheet name.
    # @param hyperlink_index The hyperlink&#39;s index.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder The document folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_hypelinks_delete_worksheet_hyperlink_with_http_info(name, sheet_name, hyperlink_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsHypelinksApi.cells_hypelinks_delete_worksheet_hyperlink ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsHypelinksApi.cells_hypelinks_delete_worksheet_hyperlink"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsHypelinksApi.cells_hypelinks_delete_worksheet_hyperlink"
      end
      # verify the required parameter 'hyperlink_index' is set
      if @api_client.config.client_side_validation && hyperlink_index.nil?
        fail ArgumentError, "Missing the required parameter 'hyperlink_index' when calling CellsHypelinksApi.cells_hypelinks_delete_worksheet_hyperlink"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/hyperlinks/{hyperlinkIndex}".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'hyperlinkIndex' + '}', hyperlink_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsHypelinksApi#cells_hypelinks_delete_worksheet_hyperlink\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete all hyperlinks in worksheet.
    # 
    # @param name Document name.
    # @param sheet_name Worksheet name.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder The document folder.
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_hypelinks_delete_worksheet_hyperlinks(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_hypelinks_delete_worksheet_hyperlinks_with_http_info(name, sheet_name, opts)
      return data
    end

    # Delete all hyperlinks in worksheet.
    # 
    # @param name Document name.
    # @param sheet_name Worksheet name.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder The document folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_hypelinks_delete_worksheet_hyperlinks_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsHypelinksApi.cells_hypelinks_delete_worksheet_hyperlinks ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsHypelinksApi.cells_hypelinks_delete_worksheet_hyperlinks"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsHypelinksApi.cells_hypelinks_delete_worksheet_hyperlinks"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/hyperlinks".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsHypelinksApi#cells_hypelinks_delete_worksheet_hyperlinks\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get worksheet hyperlink by index.
    # 
    # @param name Document name.
    # @param sheet_name Worksheet name.
    # @param hyperlink_index The hyperlink&#39;s index.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder The document folder.
    # @option opts [String] :storage storage name.
    # @return [HyperlinkResponse]
    def cells_hypelinks_get_worksheet_hyperlink(name, sheet_name, hyperlink_index, opts = {})
      data, _status_code, _headers = cells_hypelinks_get_worksheet_hyperlink_with_http_info(name, sheet_name, hyperlink_index, opts)
      return data
    end

    # Get worksheet hyperlink by index.
    # 
    # @param name Document name.
    # @param sheet_name Worksheet name.
    # @param hyperlink_index The hyperlink&#39;s index.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder The document folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(HyperlinkResponse, Fixnum, Hash)>] HyperlinkResponse data, response status code and response headers
    def cells_hypelinks_get_worksheet_hyperlink_with_http_info(name, sheet_name, hyperlink_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsHypelinksApi.cells_hypelinks_get_worksheet_hyperlink ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsHypelinksApi.cells_hypelinks_get_worksheet_hyperlink"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsHypelinksApi.cells_hypelinks_get_worksheet_hyperlink"
      end
      # verify the required parameter 'hyperlink_index' is set
      if @api_client.config.client_side_validation && hyperlink_index.nil?
        fail ArgumentError, "Missing the required parameter 'hyperlink_index' when calling CellsHypelinksApi.cells_hypelinks_get_worksheet_hyperlink"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/hyperlinks/{hyperlinkIndex}".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'hyperlinkIndex' + '}', hyperlink_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'HyperlinkResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsHypelinksApi#cells_hypelinks_get_worksheet_hyperlink\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get worksheet hyperlinks.
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [HyperlinksResponse]
    def cells_hypelinks_get_worksheet_hyperlinks(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_hypelinks_get_worksheet_hyperlinks_with_http_info(name, sheet_name, opts)
      return data
    end

    # Get worksheet hyperlinks.
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(HyperlinksResponse, Fixnum, Hash)>] HyperlinksResponse data, response status code and response headers
    def cells_hypelinks_get_worksheet_hyperlinks_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsHypelinksApi.cells_hypelinks_get_worksheet_hyperlinks ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsHypelinksApi.cells_hypelinks_get_worksheet_hyperlinks"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsHypelinksApi.cells_hypelinks_get_worksheet_hyperlinks"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/hyperlinks".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'HyperlinksResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsHypelinksApi#cells_hypelinks_get_worksheet_hyperlinks\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update worksheet hyperlink by index.
    # 
    # @param name Document name.
    # @param sheet_name Worksheet name.
    # @param hyperlink_index The hyperlink&#39;s index.
    # @param [Hash] opts the optional parameters
    # @option opts [Hyperlink] :hyperlink Hyperlink object
    # @option opts [String] :folder The document folder.
    # @option opts [String] :storage storage name.
    # @return [HyperlinkResponse]
    def cells_hypelinks_post_worksheet_hyperlink(name, sheet_name, hyperlink_index, opts = {})
      data, _status_code, _headers = cells_hypelinks_post_worksheet_hyperlink_with_http_info(name, sheet_name, hyperlink_index, opts)
      return data
    end

    # Update worksheet hyperlink by index.
    # 
    # @param name Document name.
    # @param sheet_name Worksheet name.
    # @param hyperlink_index The hyperlink&#39;s index.
    # @param [Hash] opts the optional parameters
    # @option opts [Hyperlink] :hyperlink Hyperlink object
    # @option opts [String] :folder The document folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(HyperlinkResponse, Fixnum, Hash)>] HyperlinkResponse data, response status code and response headers
    def cells_hypelinks_post_worksheet_hyperlink_with_http_info(name, sheet_name, hyperlink_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsHypelinksApi.cells_hypelinks_post_worksheet_hyperlink ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsHypelinksApi.cells_hypelinks_post_worksheet_hyperlink"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsHypelinksApi.cells_hypelinks_post_worksheet_hyperlink"
      end
      # verify the required parameter 'hyperlink_index' is set
      if @api_client.config.client_side_validation && hyperlink_index.nil?
        fail ArgumentError, "Missing the required parameter 'hyperlink_index' when calling CellsHypelinksApi.cells_hypelinks_post_worksheet_hyperlink"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/hyperlinks/{hyperlinkIndex}".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'hyperlinkIndex' + '}', hyperlink_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'hyperlink'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'HyperlinkResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsHypelinksApi#cells_hypelinks_post_worksheet_hyperlink\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Add worksheet hyperlink.
    # 
    # @param name Document name.
    # @param sheet_name Worksheet name.
    # @param first_row 
    # @param first_column 
    # @param total_rows 
    # @param total_columns 
    # @param address 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder The document folder.
    # @option opts [String] :storage storage name.
    # @return [HyperlinkResponse]
    def cells_hypelinks_put_worksheet_hyperlink(name, sheet_name, first_row, first_column, total_rows, total_columns, address, opts = {})
      data, _status_code, _headers = cells_hypelinks_put_worksheet_hyperlink_with_http_info(name, sheet_name, first_row, first_column, total_rows, total_columns, address, opts)
      return data
    end

    # Add worksheet hyperlink.
    # 
    # @param name Document name.
    # @param sheet_name Worksheet name.
    # @param first_row 
    # @param first_column 
    # @param total_rows 
    # @param total_columns 
    # @param address 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder The document folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(HyperlinkResponse, Fixnum, Hash)>] HyperlinkResponse data, response status code and response headers
    def cells_hypelinks_put_worksheet_hyperlink_with_http_info(name, sheet_name, first_row, first_column, total_rows, total_columns, address, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsHypelinksApi.cells_hypelinks_put_worksheet_hyperlink ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsHypelinksApi.cells_hypelinks_put_worksheet_hyperlink"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsHypelinksApi.cells_hypelinks_put_worksheet_hyperlink"
      end
      # verify the required parameter 'first_row' is set
      if @api_client.config.client_side_validation && first_row.nil?
        fail ArgumentError, "Missing the required parameter 'first_row' when calling CellsHypelinksApi.cells_hypelinks_put_worksheet_hyperlink"
      end
      # verify the required parameter 'first_column' is set
      if @api_client.config.client_side_validation && first_column.nil?
        fail ArgumentError, "Missing the required parameter 'first_column' when calling CellsHypelinksApi.cells_hypelinks_put_worksheet_hyperlink"
      end
      # verify the required parameter 'total_rows' is set
      if @api_client.config.client_side_validation && total_rows.nil?
        fail ArgumentError, "Missing the required parameter 'total_rows' when calling CellsHypelinksApi.cells_hypelinks_put_worksheet_hyperlink"
      end
      # verify the required parameter 'total_columns' is set
      if @api_client.config.client_side_validation && total_columns.nil?
        fail ArgumentError, "Missing the required parameter 'total_columns' when calling CellsHypelinksApi.cells_hypelinks_put_worksheet_hyperlink"
      end
      # verify the required parameter 'address' is set
      if @api_client.config.client_side_validation && address.nil?
        fail ArgumentError, "Missing the required parameter 'address' when calling CellsHypelinksApi.cells_hypelinks_put_worksheet_hyperlink"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/hyperlinks".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'firstRow'] = first_row
      query_params[:'firstColumn'] = first_column
      query_params[:'totalRows'] = total_rows
      query_params[:'totalColumns'] = total_columns
      query_params[:'address'] = address
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'HyperlinkResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsHypelinksApi#cells_hypelinks_put_worksheet_hyperlink\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
