=begin
#Web API Swagger specification

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require "uri"

module AsposeCellsCloud
  class CellsListObjectsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Delete worksheet list object by index
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param list_object_index List object index
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_list_objects_delete_worksheet_list_object(name, sheet_name, list_object_index, opts = {})
      data, _status_code, _headers = cells_list_objects_delete_worksheet_list_object_with_http_info(name, sheet_name, list_object_index, opts)
      return data
    end

    # Delete worksheet list object by index
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param list_object_index List object index
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_list_objects_delete_worksheet_list_object_with_http_info(name, sheet_name, list_object_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsListObjectsApi.cells_list_objects_delete_worksheet_list_object ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsListObjectsApi.cells_list_objects_delete_worksheet_list_object"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsListObjectsApi.cells_list_objects_delete_worksheet_list_object"
      end
      # verify the required parameter 'list_object_index' is set
      if @api_client.config.client_side_validation && list_object_index.nil?
        fail ArgumentError, "Missing the required parameter 'list_object_index' when calling CellsListObjectsApi.cells_list_objects_delete_worksheet_list_object"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/listobjects/{listObjectIndex}".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'listObjectIndex' + '}', list_object_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsListObjectsApi#cells_list_objects_delete_worksheet_list_object\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete worksheet list objects
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_list_objects_delete_worksheet_list_objects(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_list_objects_delete_worksheet_list_objects_with_http_info(name, sheet_name, opts)
      return data
    end

    # Delete worksheet list objects
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_list_objects_delete_worksheet_list_objects_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsListObjectsApi.cells_list_objects_delete_worksheet_list_objects ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsListObjectsApi.cells_list_objects_delete_worksheet_list_objects"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsListObjectsApi.cells_list_objects_delete_worksheet_list_objects"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/listobjects".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsListObjectsApi#cells_list_objects_delete_worksheet_list_objects\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get worksheet list object info by index.
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param listobjectindex list object index.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [ListObjectResponse]
    def cells_list_objects_get_worksheet_list_object(name, sheet_name, listobjectindex, opts = {})
      data, _status_code, _headers = cells_list_objects_get_worksheet_list_object_with_http_info(name, sheet_name, listobjectindex, opts)
      return data
    end

    # Get worksheet list object info by index.
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param listobjectindex list object index.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(ListObjectResponse, Fixnum, Hash)>] ListObjectResponse data, response status code and response headers
    def cells_list_objects_get_worksheet_list_object_with_http_info(name, sheet_name, listobjectindex, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsListObjectsApi.cells_list_objects_get_worksheet_list_object ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsListObjectsApi.cells_list_objects_get_worksheet_list_object"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsListObjectsApi.cells_list_objects_get_worksheet_list_object"
      end
      # verify the required parameter 'listobjectindex' is set
      if @api_client.config.client_side_validation && listobjectindex.nil?
        fail ArgumentError, "Missing the required parameter 'listobjectindex' when calling CellsListObjectsApi.cells_list_objects_get_worksheet_list_object"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/listobjects/{listobjectindex}".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'listobjectindex' + '}', listobjectindex.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ListObjectResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsListObjectsApi#cells_list_objects_get_worksheet_list_object\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get worksheet listobjects info.
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [ListObjectsResponse]
    def cells_list_objects_get_worksheet_list_objects(name, sheet_name, opts = {})
      data, _status_code, _headers = cells_list_objects_get_worksheet_list_objects_with_http_info(name, sheet_name, opts)
      return data
    end

    # Get worksheet listobjects info.
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(ListObjectsResponse, Fixnum, Hash)>] ListObjectsResponse data, response status code and response headers
    def cells_list_objects_get_worksheet_list_objects_with_http_info(name, sheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsListObjectsApi.cells_list_objects_get_worksheet_list_objects ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsListObjectsApi.cells_list_objects_get_worksheet_list_objects"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsListObjectsApi.cells_list_objects_get_worksheet_list_objects"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/listobjects".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ListObjectsResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsListObjectsApi#cells_list_objects_get_worksheet_list_objects\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update  list object 
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param list_object_index list Object index
    # @param [Hash] opts the optional parameters
    # @option opts [ListObject] :list_object listObject dto in request body.
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_list_objects_post_worksheet_list_object(name, sheet_name, list_object_index, opts = {})
      data, _status_code, _headers = cells_list_objects_post_worksheet_list_object_with_http_info(name, sheet_name, list_object_index, opts)
      return data
    end

    # Update  list object 
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param list_object_index list Object index
    # @param [Hash] opts the optional parameters
    # @option opts [ListObject] :list_object listObject dto in request body.
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_list_objects_post_worksheet_list_object_with_http_info(name, sheet_name, list_object_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsListObjectsApi.cells_list_objects_post_worksheet_list_object ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsListObjectsApi.cells_list_objects_post_worksheet_list_object"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsListObjectsApi.cells_list_objects_post_worksheet_list_object"
      end
      # verify the required parameter 'list_object_index' is set
      if @api_client.config.client_side_validation && list_object_index.nil?
        fail ArgumentError, "Missing the required parameter 'list_object_index' when calling CellsListObjectsApi.cells_list_objects_post_worksheet_list_object"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/listobjects/{listObjectIndex}".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'listObjectIndex' + '}', list_object_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'list_object'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsListObjectsApi#cells_list_objects_post_worksheet_list_object\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param list_object_index 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_list_objects_post_worksheet_list_object_convert_to_range(name, sheet_name, list_object_index, opts = {})
      data, _status_code, _headers = cells_list_objects_post_worksheet_list_object_convert_to_range_with_http_info(name, sheet_name, list_object_index, opts)
      return data
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param list_object_index 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_list_objects_post_worksheet_list_object_convert_to_range_with_http_info(name, sheet_name, list_object_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsListObjectsApi.cells_list_objects_post_worksheet_list_object_convert_to_range ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsListObjectsApi.cells_list_objects_post_worksheet_list_object_convert_to_range"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsListObjectsApi.cells_list_objects_post_worksheet_list_object_convert_to_range"
      end
      # verify the required parameter 'list_object_index' is set
      if @api_client.config.client_side_validation && list_object_index.nil?
        fail ArgumentError, "Missing the required parameter 'list_object_index' when calling CellsListObjectsApi.cells_list_objects_post_worksheet_list_object_convert_to_range"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/listobjects/{listObjectIndex}/ConvertToRange".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'listObjectIndex' + '}', list_object_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsListObjectsApi#cells_list_objects_post_worksheet_list_object_convert_to_range\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param list_object_index 
    # @param [Hash] opts the optional parameters
    # @option opts [DataSorter] :data_sorter 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_list_objects_post_worksheet_list_object_sort_table(name, sheet_name, list_object_index, opts = {})
      data, _status_code, _headers = cells_list_objects_post_worksheet_list_object_sort_table_with_http_info(name, sheet_name, list_object_index, opts)
      return data
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param list_object_index 
    # @param [Hash] opts the optional parameters
    # @option opts [DataSorter] :data_sorter 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_list_objects_post_worksheet_list_object_sort_table_with_http_info(name, sheet_name, list_object_index, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsListObjectsApi.cells_list_objects_post_worksheet_list_object_sort_table ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsListObjectsApi.cells_list_objects_post_worksheet_list_object_sort_table"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsListObjectsApi.cells_list_objects_post_worksheet_list_object_sort_table"
      end
      # verify the required parameter 'list_object_index' is set
      if @api_client.config.client_side_validation && list_object_index.nil?
        fail ArgumentError, "Missing the required parameter 'list_object_index' when calling CellsListObjectsApi.cells_list_objects_post_worksheet_list_object_sort_table"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/listobjects/{listObjectIndex}/sort".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'listObjectIndex' + '}', list_object_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'data_sorter'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsListObjectsApi#cells_list_objects_post_worksheet_list_object_sort_table\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param list_object_index 
    # @param destsheet_name 
    # @param [Hash] opts the optional parameters
    # @option opts [CreatePivotTableRequest] :request 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [SaaSposeResponse]
    def cells_list_objects_post_worksheet_list_object_summarize_with_pivot_table(name, sheet_name, list_object_index, destsheet_name, opts = {})
      data, _status_code, _headers = cells_list_objects_post_worksheet_list_object_summarize_with_pivot_table_with_http_info(name, sheet_name, list_object_index, destsheet_name, opts)
      return data
    end

    # 
    # 
    # @param name 
    # @param sheet_name 
    # @param list_object_index 
    # @param destsheet_name 
    # @param [Hash] opts the optional parameters
    # @option opts [CreatePivotTableRequest] :request 
    # @option opts [String] :folder 
    # @option opts [String] :storage storage name.
    # @return [Array<(SaaSposeResponse, Fixnum, Hash)>] SaaSposeResponse data, response status code and response headers
    def cells_list_objects_post_worksheet_list_object_summarize_with_pivot_table_with_http_info(name, sheet_name, list_object_index, destsheet_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsListObjectsApi.cells_list_objects_post_worksheet_list_object_summarize_with_pivot_table ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsListObjectsApi.cells_list_objects_post_worksheet_list_object_summarize_with_pivot_table"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsListObjectsApi.cells_list_objects_post_worksheet_list_object_summarize_with_pivot_table"
      end
      # verify the required parameter 'list_object_index' is set
      if @api_client.config.client_side_validation && list_object_index.nil?
        fail ArgumentError, "Missing the required parameter 'list_object_index' when calling CellsListObjectsApi.cells_list_objects_post_worksheet_list_object_summarize_with_pivot_table"
      end
      # verify the required parameter 'destsheet_name' is set
      if @api_client.config.client_side_validation && destsheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'destsheet_name' when calling CellsListObjectsApi.cells_list_objects_post_worksheet_list_object_summarize_with_pivot_table"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/listobjects/{listObjectIndex}/SummarizeWithPivotTable".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s).sub('{' + 'listObjectIndex' + '}', list_object_index.to_s)

      # query parameters
      query_params = {}
      query_params[:'destsheetName'] = destsheet_name
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'request'])
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'SaaSposeResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsListObjectsApi#cells_list_objects_post_worksheet_list_object_summarize_with_pivot_table\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Add a list object into worksheet.
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param start_row The start row of the list range.
    # @param start_column The start row of the list range.
    # @param end_row The start row of the list range.
    # @param end_column The start row of the list range.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @option opts [BOOLEAN] :has_headers Whether the range has headers. (default to true)
    # @return [ListObjectResponse]
    def cells_list_objects_put_worksheet_list_object(name, sheet_name, start_row, start_column, end_row, end_column, opts = {})
      data, _status_code, _headers = cells_list_objects_put_worksheet_list_object_with_http_info(name, sheet_name, start_row, start_column, end_row, end_column, opts)
      return data
    end

    # Add a list object into worksheet.
    # 
    # @param name Document name.
    # @param sheet_name The worksheet name.
    # @param start_row The start row of the list range.
    # @param start_column The start row of the list range.
    # @param end_row The start row of the list range.
    # @param end_column The start row of the list range.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :folder Document&#39;s folder.
    # @option opts [String] :storage storage name.
    # @option opts [BOOLEAN] :has_headers Whether the range has headers.
    # @return [Array<(ListObjectResponse, Fixnum, Hash)>] ListObjectResponse data, response status code and response headers
    def cells_list_objects_put_worksheet_list_object_with_http_info(name, sheet_name, start_row, start_column, end_row, end_column, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CellsListObjectsApi.cells_list_objects_put_worksheet_list_object ..."
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        fail ArgumentError, "Missing the required parameter 'name' when calling CellsListObjectsApi.cells_list_objects_put_worksheet_list_object"
      end
      # verify the required parameter 'sheet_name' is set
      if @api_client.config.client_side_validation && sheet_name.nil?
        fail ArgumentError, "Missing the required parameter 'sheet_name' when calling CellsListObjectsApi.cells_list_objects_put_worksheet_list_object"
      end
      # verify the required parameter 'start_row' is set
      if @api_client.config.client_side_validation && start_row.nil?
        fail ArgumentError, "Missing the required parameter 'start_row' when calling CellsListObjectsApi.cells_list_objects_put_worksheet_list_object"
      end
      # verify the required parameter 'start_column' is set
      if @api_client.config.client_side_validation && start_column.nil?
        fail ArgumentError, "Missing the required parameter 'start_column' when calling CellsListObjectsApi.cells_list_objects_put_worksheet_list_object"
      end
      # verify the required parameter 'end_row' is set
      if @api_client.config.client_side_validation && end_row.nil?
        fail ArgumentError, "Missing the required parameter 'end_row' when calling CellsListObjectsApi.cells_list_objects_put_worksheet_list_object"
      end
      # verify the required parameter 'end_column' is set
      if @api_client.config.client_side_validation && end_column.nil?
        fail ArgumentError, "Missing the required parameter 'end_column' when calling CellsListObjectsApi.cells_list_objects_put_worksheet_list_object"
      end
      # resource path
      local_var_path = "/cells/{name}/worksheets/{sheetName}/listobjects".sub('{' + 'name' + '}', name.to_s).sub('{' + 'sheetName' + '}', sheet_name.to_s)

      # query parameters
      query_params = {}
      query_params[:'startRow'] = start_row
      query_params[:'startColumn'] = start_column
      query_params[:'endRow'] = end_row
      query_params[:'endColumn'] = end_column
      query_params[:'folder'] = opts[:'folder'] if !opts[:'folder'].nil?
      query_params[:'storage'] = opts[:'storage'] if !opts[:'storage'].nil?
      query_params[:'hasHeaders'] = opts[:'has_headers'] if !opts[:'has_headers'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ListObjectResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CellsListObjectsApi#cells_list_objects_put_worksheet_list_object\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
