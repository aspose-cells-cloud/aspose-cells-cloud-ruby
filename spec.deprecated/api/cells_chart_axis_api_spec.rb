

require 'spec_helper'
require 'json'

# Unit tests for AsposeCellsCloud::CellsChartAxisApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CellsChartAxisApi' do
  before do
    @instance = AsposeCellsCloud::CellsApi.new($client_id,$client_secret,$api_version,$baseurl)
    $VERBOSE = nil
  end

  after do
    # run after each test
  end



  # unit tests for cells_charts_get_chart_category_axis
  # 
  # @param name Workbook name.
  # @param sheet_name Worksheet name.
  # @param chart_index The chart index.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder Workbook folder.
  # @option opts [String] :storage storage name.
  # @return [ChartAreaResponse]
  describe 'cells_charts_get_chart_category_axis test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET4
      chart_index = 0
      folder = $TEMPFOLDER
      result = @instance.upload_file( folder+"/"+name,  ::File.open(File.expand_path("data/"+name),"r") {|io| io.read(io.size) })
      expect(result.uploaded.size).to  be > 0
      result = @instance.cells_charts_get_chart_category_axis(name, sheet_name, chart_index, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_charts_get_chart_second_category_axis
  # 
  # @param name Workbook name.
  # @param sheet_name Worksheet name.
  # @param chart_index The chart index.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder Workbook folder.
  # @option opts [String] :storage storage name.
  # @return [ChartAreaResponse]
  describe 'cells_charts_get_chart_second_category_axis test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET4
      chart_index = 0
      folder = $TEMPFOLDER
      result = @instance.upload_file( folder+"/"+name,  ::File.open(File.expand_path("data/"+name),"r") {|io| io.read(io.size) })
      expect(result.uploaded.size).to  be > 0
      result = @instance.cells_charts_get_chart_second_category_axis(name, sheet_name, chart_index, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_charts_get_chart_value_axis
  # 
  # @param name Workbook name.
  # @param sheet_name Worksheet name.
  # @param chart_index The chart index.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder Workbook folder.
  # @option opts [String] :storage storage name.
  # @return [ChartAreaResponse]
  describe 'cells_charts_get_chart_value_axis test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET4
      chart_index = 0
      folder = $TEMPFOLDER
      result = @instance.upload_file( folder+"/"+name,  ::File.open(File.expand_path("data/"+name),"r") {|io| io.read(io.size) })
      expect(result.uploaded.size).to  be > 0
      result = @instance.cells_charts_get_chart_value_axis(name, sheet_name, chart_index, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end
  # unit tests for cells_charts_get_second_chart_value_axis
  # 
  # @param name Workbook name.
  # @param sheet_name Worksheet name.
  # @param chart_index The chart index.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder Workbook folder.
  # @option opts [String] :storage storage name.
  # @return [ChartAreaResponse]
  describe 'cells_charts_get_chart_second_value_axis test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET4
      chart_index = 0
      folder = $TEMPFOLDER
      result = @instance.upload_file( folder+"/"+name,  ::File.open(File.expand_path("data/"+name),"r") {|io| io.read(io.size) })
      expect(result.uploaded.size).to  be > 0
      result = @instance.cells_charts_get_chart_second_value_axis(name, sheet_name, chart_index, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end
  # unit tests for cells_charts_get_chart_series_axis
  # 
  # @param name Workbook name.
  # @param sheet_name Worksheet name.
  # @param chart_index The chart index.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder Workbook folder.
  # @option opts [String] :storage storage name.
  # @return [ChartAreaResponse]
  describe 'cells_charts_get_chart_series_axis test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET4
      chart_index = 0
      folder = $TEMPFOLDER
      result = @instance.upload_file( folder+"/"+name,  ::File.open(File.expand_path("data/"+name),"r") {|io| io.read(io.size) })
      expect(result.uploaded.size).to  be > 0
      result = @instance.cells_charts_get_chart_series_axis(name, sheet_name, chart_index, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end


  # unit tests for cells_charts_post_chart_category_axis
  # 
  # @param name Workbook name.
  # @param sheet_name Worksheet name.
  # @param chart_index The chart index.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder Workbook folder.
  # @option opts [String] :storage storage name.
  # @return [ChartAreaResponse]
  describe 'cells_charts_post_chart_category_axis test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET4
      chart_index = 0
      axis = AsposeCellsCloud::Axis.new
      axis.min_value = 10.0
      folder = $TEMPFOLDER
      result = @instance.upload_file( folder+"/"+name,  ::File.open(File.expand_path("data/"+name),"r") {|io| io.read(io.size) })
      expect(result.uploaded.size).to  be > 0
      result = @instance.cells_charts_post_chart_category_axis(name, sheet_name, chart_index, axis,{ :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_charts_post_chart_second_category_axis
  # 
  # @param name Workbook name.
  # @param sheet_name Worksheet name.
  # @param chart_index The chart index.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder Workbook folder.
  # @option opts [String] :storage storage name.
  # @return [ChartAreaResponse]
  describe 'cells_charts_post_chart_second_category_axis test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET4
      chart_index = 0
      axis = AsposeCellsCloud::Axis.new
      axis.min_value = 10.0
      folder = $TEMPFOLDER
      result = @instance.upload_file( folder+"/"+name,  ::File.open(File.expand_path("data/"+name),"r") {|io| io.read(io.size) })
      expect(result.uploaded.size).to  be > 0
      result = @instance.cells_charts_post_chart_second_category_axis(name, sheet_name, chart_index, axis,{ :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_charts_post_chart_value_axis
  # 
  # @param name Workbook name.
  # @param sheet_name Worksheet name.
  # @param chart_index The chart index.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder Workbook folder.
  # @option opts [String] :storage storage name.
  # @return [ChartAreaResponse]
  describe 'cells_charts_post_chart_value_axis test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET4
      chart_index = 0
      axis = AsposeCellsCloud::Axis.new
      axis.min_value = 10.0
      folder = $TEMPFOLDER
      result = @instance.upload_file( folder+"/"+name,  ::File.open(File.expand_path("data/"+name),"r") {|io| io.read(io.size) })
      expect(result.uploaded.size).to  be > 0
      result = @instance.cells_charts_post_chart_value_axis(name, sheet_name, chart_index, axis,{ :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end
  # unit tests for cells_charts_get_second_chart_value_axis
  # 
  # @param name Workbook name.
  # @param sheet_name Worksheet name.
  # @param chart_index The chart index.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder Workbook folder.
  # @option opts [String] :storage storage name.
  # @return [ChartAreaResponse]
  describe 'cells_charts_post_chart_second_value_axis test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET4
      chart_index = 0
      axis = AsposeCellsCloud::Axis.new
      axis.min_value = 10.0
      folder = $TEMPFOLDER
      result = @instance.upload_file( folder+"/"+name,  ::File.open(File.expand_path("data/"+name),"r") {|io| io.read(io.size) })
      expect(result.uploaded.size).to  be > 0
      result = @instance.cells_charts_post_chart_second_value_axis(name, sheet_name, chart_index,axis, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end
  # unit tests for cells_charts_post_chart_series_axis
  # 
  # @param name Workbook name.
  # @param sheet_name Worksheet name.
  # @param chart_index The chart index.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder Workbook folder.
  # @option opts [String] :storage storage name.
  # @return [ChartAreaResponse]
  describe 'cells_charts_post_chart_series_axis test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET4
      chart_index = 0
      axis = AsposeCellsCloud::Axis.new
      axis.min_value = 10.0
      folder = $TEMPFOLDER
      result = @instance.upload_file( folder+"/"+name,  ::File.open(File.expand_path("data/"+name),"r") {|io| io.read(io.size) })
      expect(result.uploaded.size).to  be > 0
      result = @instance.cells_charts_post_chart_series_axis(name, sheet_name, chart_index,axis, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
