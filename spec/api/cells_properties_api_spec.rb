=begin
#Web API Swagger specification

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for AsposeCellsCloud::CellsPropertiesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CellsPropertiesApi' do
  before do
    @instance = AsposeCellsCloud::CellsApi.new("66164C51-693E-4904-A121-545961673EC1","536e76768419db9585afdd37bb5f7533")
  end

  after do
    # run after each test
  end



  # unit tests for cells_properties_delete_document_properties
  # Delete all custom document properties and clean built-in ones.
  # 
  # @param name The document name.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder The document folder.
  # @option opts [String] :storage storage name.
  # @return [CellsDocumentPropertiesResponse]
  describe 'cells_properties_delete_document_properties test' do
    it "should work" do
      name = $BOOK1
      folder = $TEMPFOLDER
      @instance.upload_file( folder+"/"+name,  ::File.open("/home/roywang/asposecellscloudsdk/data/" +name,"r") {|io| io.read(io.size) })
      @instance.cells_properties_delete_document_properties(name,  { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_properties_delete_document_property
  # Delete document property.
  # 
  # @param name The document name.
  # @param property_name The property name.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder The document folder.
  # @option opts [String] :storage storage name.
  # @return [CellsDocumentPropertiesResponse]
  describe 'cells_properties_delete_document_property test' do
    it "should work" do
      name = $BOOK1
      property_name = 'Author'
      folder = $TEMPFOLDER
      
      @instance.cells_properties_delete_document_property(name, property_name,  { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_properties_get_document_properties
  # Read document properties.
  # 
  # @param name The document name.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder The document folder.
  # @option opts [String] :storage storage name.
  # @return [CellsDocumentPropertiesResponse]
  describe 'cells_properties_get_document_properties test' do
    it "should work" do
      name = $BOOK1
      folder = $TEMPFOLDER
      
      @instance.cells_properties_get_document_properties(name,  { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_properties_get_document_property
  # Read document property by name.
  # 
  # @param name The document name.
  # @param property_name The property name.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder The document folder.
  # @option opts [String] :storage storage name.
  # @return [CellsDocumentPropertyResponse]
  describe 'cells_properties_get_document_property test' do
    it "should work" do
      name = $BOOK1
      property_name = 'Author'
      folder = $TEMPFOLDER
      
      @instance.cells_properties_get_document_property(name, property_name,  { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_properties_put_document_property
  # Set/create document property.
  # 
  # @param name The document name.
  # @param property_name The property name.
  # @param [Hash] opts the optional parameters
  # @option opts [CellsDocumentProperty] :property with new property value.
  # @option opts [String] :folder The document folder.
  # @option opts [String] :storage storage name.
  # @return [CellsDocumentPropertyResponse]
  describe 'cells_properties_put_document_property test' do
    it "should work" do
      name = $BOOK1
      property_name = 'Author'
      property = AsposeCellsCloud::CellsDocumentProperty.new({:Name=>'Author',:Value=>'roy'})
      folder = $TEMPFOLDER
      @instance.upload_file( folder+"/"+name,  ::File.open("/home/roywang/asposecellscloudsdk/data/" +name,"r") {|io| io.read(io.size) })
      @instance.cells_properties_put_document_property(name, property_name, { :property=>property,  :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
