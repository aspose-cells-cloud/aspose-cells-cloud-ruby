=begin
#Web API Swagger specification

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for AsposeCellsCloud::CellsListObjectsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CellsListObjectsApi' do
  before do
    @instance = AsposeCellsCloud::CellsApi.new("66164C51-693E-4904-A121-545961673EC1","536e76768419db9585afdd37bb5f7533")
  end

  after do
    # run after each test
  end


  # unit tests for cells_list_objects_get_worksheet_list_object
  # Get worksheet list object info by index.
  # 
  # @param name Document name.
  # @param sheet_name The worksheet name.
  # @param listobjectindex list object index.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder Document&#39;s folder.
  # @option opts [String] :storage storage name.
  # @return [ListObjectResponse]
  describe 'cells_list_objects_get_worksheet_list_object test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET7
      listobjectindex = 0
      folder = $TEMPFOLDER
      @instance.upload_file( folder+"/"+name,  ::File.open("/home/roywang/asposecellscloudsdk/data/" +name,"r") {|io| io.read(io.size) })
      @instance.cells_list_objects_get_worksheet_list_object(name, sheet_name, listobjectindex, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_list_objects_get_worksheet_list_objects
  # Get worksheet listobjects info.
  # 
  # @param name Document name.
  # @param sheet_name The worksheet name.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder Document&#39;s folder.
  # @option opts [String] :storage storage name.
  # @return [ListObjectsResponse]
  describe 'cells_list_objects_get_worksheet_list_objects test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET7
      folder = $TEMPFOLDER
      @instance.upload_file( folder+"/"+name,  ::File.open("/home/roywang/asposecellscloudsdk/data/" +name,"r") {|io| io.read(io.size) })
      @instance.cells_list_objects_get_worksheet_list_objects(name, sheet_name, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_list_objects_post_worksheet_list_object
  # Update  list object 
  # 
  # @param name Document name.
  # @param sheet_name The worksheet name.
  # @param list_object_index list Object index
  # @param [Hash] opts the optional parameters
  # @option opts [ListObject] :list_object listObject dto in request body.
  # @option opts [String] :folder Document&#39;s folder.
  # @option opts [String] :storage storage name.
  # @return [CellsCloudResponse]
  describe 'cells_list_objects_post_worksheet_list_object test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET7
      list_object_index = 0
      list_object = AsposeCellsCloud::ListObject.new({ :'StartRow'=>1})
      folder = $TEMPFOLDER
      
      @instance.cells_list_objects_post_worksheet_list_object(name, sheet_name, list_object_index, { :list_object=>list_object, :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_list_objects_post_worksheet_list_object_convert_to_range
  # 
  # 
  # @param name 
  # @param sheet_name 
  # @param list_object_index 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder 
  # @option opts [String] :storage storage name.
  # @return [CellsCloudResponse]
  describe 'cells_list_objects_post_worksheet_list_object_convert_to_range test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET7
      list_object_index = 0
      folder = $TEMPFOLDER
      
      @instance.cells_list_objects_post_worksheet_list_object_convert_to_range(name, sheet_name, list_object_index, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_list_objects_post_worksheet_list_object_sort_table
  # 
  # 
  # @param name 
  # @param sheet_name 
  # @param list_object_index 
  # @param [Hash] opts the optional parameters
  # @option opts [DataSorter] :data_sorter 
  # @option opts [String] :folder 
  # @option opts [String] :storage storage name.
  # @return [CellsCloudResponse]
  describe 'cells_list_objects_post_worksheet_list_object_sort_table test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET7
      list_object_index = 0
      data_sorter = AsposeCellsCloud::DataSorter.new({:'CaseSensitive'=>true})
      folder = $TEMPFOLDER
      @instance.upload_file( folder+"/"+name,  ::File.open("/home/roywang/asposecellscloudsdk/data/" +name,"r") {|io| io.read(io.size) })
      @instance.cells_list_objects_post_worksheet_list_object_sort_table(name, sheet_name, list_object_index,  {:data_sorter=>data_sorter, :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_list_objects_post_worksheet_list_object_summarize_with_pivot_table
  # 
  # 
  # @param name 
  # @param sheet_name 
  # @param list_object_index 
  # @param destsheet_name 
  # @param [Hash] opts the optional parameters
  # @option opts [CreatePivotTableRequest] :request 
  # @option opts [String] :folder 
  # @option opts [String] :storage storage name.
  # @return [CellsCloudResponse]
  describe 'cells_list_objects_post_worksheet_list_object_summarize_with_pivot_table test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET7
      list_object_index = 0
      destsheet_name = $SHEET7
      request = AsposeCellsCloud::CreatePivotTableRequest.new({:DestCellName=>'C1',:Name=>'testp',:PivotFieldColumns=>[2],:PivotFieldData=>[1],:PivotFieldRows=>[0],:SourceData=>'=Sheet2!A1:E8',:UseSameSource=>true})
      folder = $TEMPFOLDER
      @instance.upload_file( folder+"/"+name,  ::File.open("/home/roywang/asposecellscloudsdk/data/" +name,"r") {|io| io.read(io.size) })
      @instance.cells_list_objects_post_worksheet_list_object_summarize_with_pivot_table(name, sheet_name, list_object_index, destsheet_name,  {:request=>request, :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_list_objects_put_worksheet_list_object
  # Add a list object into worksheet.
  # 
  # @param name Document name.
  # @param sheet_name The worksheet name.
  # @param start_row The start row of the list range.
  # @param start_column The start row of the list range.
  # @param end_row The start row of the list range.
  # @param end_column The start row of the list range.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder Document&#39;s folder.
  # @option opts [String] :storage storage name.
  # @option opts [BOOLEAN] :has_headers Whether the range has headers.
  # @return [ListObjectResponse]
  describe 'cells_list_objects_put_worksheet_list_object test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET7
      start_row = 1
      start_column = 1
      end_row = 6
      end_column = 6
      folder = $TEMPFOLDER
      
      has_headers = true
      @instance.cells_list_objects_put_worksheet_list_object(name, sheet_name, start_row, start_column, end_row, end_column, { :folder=>folder, :has_headers=>has_headers})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_list_objects_delete_worksheet_list_object
  # Delete worksheet list object by index
  # 
  # @param name Document name.
  # @param sheet_name The worksheet name.
  # @param list_object_index List object index
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder Document&#39;s folder.
  # @option opts [String] :storage storage name.
  # @return [CellsCloudResponse]
  describe 'cells_list_objects_delete_worksheet_list_object test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET7
      list_object_index = 0
      folder = $TEMPFOLDER
      
      @instance.cells_list_objects_delete_worksheet_list_object(name, sheet_name, list_object_index, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_list_objects_delete_worksheet_list_objects
  # Delete worksheet list objects
  # 
  # @param name Document name.
  # @param sheet_name The worksheet name.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder Document&#39;s folder.
  # @option opts [String] :storage storage name.
  # @return [CellsCloudResponse]
  describe 'cells_list_objects_delete_worksheet_list_objects test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET7
      folder = $TEMPFOLDER
      
      @instance.cells_list_objects_delete_worksheet_list_objects(name, sheet_name, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
