=begin
#Web API Swagger specification

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for AsposeCellsCloud::CellsPageSetupApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CellsPageSetupApi' do
  before do
    # run before each test
    if $access_token == nil then
        conf = AsposeCellsCloud::Configuration.new
        conf.base_path = ""
        instance = AsposeCellsCloud::OAuthApi.new(AsposeCellsCloud::ApiClient.new(conf))
        $access_token = instance.o_auth_post($grant_type,$client_id,$client_secret).access_token
    end
  
    conf = AsposeCellsCloud::Configuration.new
    conf.access_token = $access_token	
    client = AsposeCellsCloud::ApiClient.new(conf)
    client.default_headers["Authorization"] ="Bearer " + $access_token

    @instance = AsposeCellsCloud::CellsPageSetupApi.new(client)
  end

  after do
    # run after each test
  end

  describe 'test an instance of CellsPageSetupApi' do
    it 'should create an instance of CellsPageSetupApi' do
      expect(@instance).to be_instance_of(AsposeCellsCloud::CellsPageSetupApi)
    end
  end

  # unit tests for cells_page_setup_delete_header_footer
  # clear header footer
  # 
  # @param name 
  # @param sheet_name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder 
  # @option opts [String] :storage storage name.
  # @return [SaaSposeResponse]
  describe 'cells_page_setup_delete_header_footer test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET1
      folder = $TEMPFOLDER
      
      @instance.cells_page_setup_delete_header_footer(name, sheet_name, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_page_setup_get_footer
  # get page footer information
  # 
  # @param name 
  # @param sheet_name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder 
  # @option opts [String] :storage storage name.
  # @return [PageSectionsResponse]
  describe 'cells_page_setup_get_footer test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET1
      folder = $TEMPFOLDER
      
      @instance.cells_page_setup_get_footer(name, sheet_name, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_page_setup_get_header
  # get page header information
  # 
  # @param name 
  # @param sheet_name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder 
  # @option opts [String] :storage storage name.
  # @return [PageSectionsResponse]
  describe 'cells_page_setup_get_header test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET1
      folder = $TEMPFOLDER
      
      @instance.cells_page_setup_get_header(name, sheet_name, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_page_setup_get_page_setup
  # Get Page Setup information.             
  # 
  # @param name 
  # @param sheet_name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder 
  # @option opts [String] :storage storage name.
  # @return [PageSetupResponse]
  describe 'cells_page_setup_get_page_setup test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET1
      folder = $TEMPFOLDER
      
      @instance.cells_page_setup_get_page_setup(name, sheet_name, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_page_setup_post_footer
  # update  page footer information 
  # 
  # @param name 
  # @param sheet_name 
  # @param section 
  # @param script 
  # @param is_first_page 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder 
  # @option opts [String] :storage storage name.
  # @return [SaaSposeResponse]
  describe 'cells_page_setup_post_footer test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET1
      section = 1
      script = 'test'
      is_first_page = true
      folder = $TEMPFOLDER
      
      @instance.cells_page_setup_post_footer(name, sheet_name, section, script, is_first_page, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_page_setup_post_header
  # update  page header information 
  # 
  # @param name 
  # @param sheet_name 
  # @param section 
  # @param script 
  # @param is_first_page 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder 
  # @option opts [String] :storage storage name.
  # @return [SaaSposeResponse]
  describe 'cells_page_setup_post_header test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET1
      section = 1
      script = 'tret'
      is_first_page = true
      folder = $TEMPFOLDER
      
      @instance.cells_page_setup_post_header(name, sheet_name, section, script, is_first_page, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_page_setup_post_page_setup
  # Update Page Setup information.
  # 
  # @param name 
  # @param sheet_name 
  # @param [Hash] opts the optional parameters
  # @option opts [PageSetup] :page_setup 
  # @option opts [String] :folder 
  # @option opts [String] :storage storage name.
  # @return [SaaSposeResponse]
  describe 'cells_page_setup_post_page_setup test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET1
      page_setup = AsposeCellsCloud::PageSetup.new
      folder = $TEMPFOLDER
      
      @instance.cells_page_setup_post_page_setup(name, sheet_name,  {:page_setup=>page_setup, :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
