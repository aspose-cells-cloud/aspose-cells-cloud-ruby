=begin
#Web API Swagger specification

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for AsposeCellsCloud::CellsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'LightCellsApi' do
  before do
    @instance = AsposeCellsCloud::LightCellsApi.new($client_id,$client_secret,$api_version,$baseurl)
    $VERBOSE = nil
  end

  after do
    # run after each test
  end

  describe 'lite_cells_unit export object test' do
    it "should work" do
      files = {}      
      name = $DataSourceXlsx
      files[name] = ::File.open(File.expand_path("data/"+name),"r") 
      name =$AssemblyTestXlsx 
      files[name] = ::File.open(File.expand_path("data/"+name),"r")
     
      result = @instance.post_export(files  ,"chart","pdf")

      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      end
  end
  describe 'lite_cells_unit export object test' do
    it "should work" do
      files = {}      
      name = $DataSourceXlsx
      files[name] = ::File.open(File.expand_path("data/"+name),"r") 
      name =$AssemblyTestXlsx 
      files[name] = ::File.open(File.expand_path("data/"+name),"r")
     
      result = @instance.post_export(files  ,"chart","tiff")

      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      end
  end

  describe 'lite_cells_unit export object test' do
    it "should work" do
      files = {}      
      name = $DataSourceXlsx
      files[name] = ::File.open(File.expand_path("data/"+name),"r") 
      name =$AssemblyTestXlsx 
      files[name] = ::File.open(File.expand_path("data/"+name),"r")
     
      result = @instance.post_export(files  ,"chart","png")

      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      end
  end  

  describe 'lite_cells_unit export object test' do
    it "should work" do
      files = {}      
      name = $DataSourceXlsx
      files[name] = ::File.open(File.expand_path("data/"+name),"r") 
      name =$AssemblyTestXlsx 
      files[name] = ::File.open(File.expand_path("data/"+name),"r")
     
      result = @instance.post_export(files  ,"picture","png")

      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      end
  end

  describe 'lite_cells_unit export object test' do
    it "should work" do
      files = {}      
      name = $DataSourceXlsx
      files[name] = ::File.open(File.expand_path("data/"+name),"r") 
      name =$AssemblyTestXlsx 
      files[name] = ::File.open(File.expand_path("data/"+name),"r")
     
      result = @instance.post_export(files  ,"shape","png")

      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      end
  end

  describe 'lite_cells_unit export object test' do
    it "should work" do
      files = {}      
      name = $DataSourceXlsx
      files[name] = ::File.open(File.expand_path("data/"+name),"r") 
      name =$AssemblyTestXlsx 
      files[name] = ::File.open(File.expand_path("data/"+name),"r")
     
      result = @instance.post_export(files  ,"sheet","png")

      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      end
  end

  describe 'lite_cells_unit export object test' do
    it "should work" do
      files = {}      
      name = $DataSourceXlsx
      files[name] = ::File.open(File.expand_path("data/"+name),"r") 
      name =$AssemblyTestXlsx 
      files[name] = ::File.open(File.expand_path("data/"+name),"r")
     
      result = @instance.post_export(files  ,"sheet","pdf")

      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      end
  end
  describe 'lite_cells_unit export object test' do
    it "should work" do
      files = {}      
      name = $DataSourceXlsx
      files[name] = ::File.open(File.expand_path("data/"+name),"r") 
      name =$AssemblyTestXlsx 
      files[name] = ::File.open(File.expand_path("data/"+name),"r")
     
      result = @instance.post_export(files  ,"sheet","ods")

      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      end
  end
  describe 'lite_cells_unit export object test' do
    it "should work" do
      files = {}      
      name = $DataSourceXlsx
      files[name] = ::File.open(File.expand_path("data/"+name),"r") 
      name =$AssemblyTestXlsx 
      files[name] = ::File.open(File.expand_path("data/"+name),"r")
     
      result = @instance.post_export(files  ,"workbook","png")

      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      end
  end
  describe 'lite_cells_unit export object test' do
    it "should work" do
      files = {}      
      name = $DataSourceXlsx
      files[name] = ::File.open(File.expand_path("data/"+name),"r") 
      name =$AssemblyTestXlsx 
      files[name] = ::File.open(File.expand_path("data/"+name),"r")
     
      result = @instance.post_export(files  ,"workbook","ods")

      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      end
  end

  describe 'lite_cells_unit export object test' do
    it "should work" do
      files = {}      
      name = $DataSourceXlsx
      files[name] = ::File.open(File.expand_path("data/"+name),"r") 
      name =$AssemblyTestXlsx 
      files[name] = ::File.open(File.expand_path("data/"+name),"r")
     
  
      result = @instance.post_export(files  ,"workbook","pdf")

      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end
  
  describe 'lite_cells_unit export object test' do
    it "should work" do
      files = {}      
      name = $DataSourceXlsx
      files[name] = ::File.open(File.expand_path("data/"+name),"r") 
      name =$AssemblyTestXlsx 
      files[name] = ::File.open(File.expand_path("data/"+name),"r")
     
      result = @instance.post_export(files  ,"listobject","xlsx")

      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      end
  end  

  describe 'lite_cells_unit export object test' do
    it "should work" do
      files = {}      
      name = $DataSourceXlsx
      files[name] = ::File.open(File.expand_path("data/"+name),"r") 
      name =$AssemblyTestXlsx 
      files[name] = ::File.open(File.expand_path("data/"+name),"r")
     
      result = @instance.post_export(files  ,"listobject","png")

      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      end
  end

  describe 'lite_cells_unit export object test' do
    it "should work" do
      files = {}      
      name = $DataSourceXlsx
      files[name] = ::File.open(File.expand_path("data/"+name),"r") 
      name =$AssemblyTestXlsx 
      files[name] = ::File.open(File.expand_path("data/"+name),"r")
     
      result = @instance.post_export(files  ,"listobject","pdf")

      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      end
  end

  describe 'lite_cells_unit export object test' do
    it "should work" do
      files = {}      
      name = $DataSourceXlsx
      files[name] = ::File.open(File.expand_path("data/"+name),"r") 
      name =$AssemblyTestXlsx 
      files[name] = ::File.open(File.expand_path("data/"+name),"r")
     
      extendedQueryParameters = {} 
      extendedQueryParameters['OnePagePerSheet'] = 'false' 
      result = @instance.post_export(files  ,"listobject","pdf", { :extendedQueryParameters=>extendedQueryParameters})

      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      end
  end

end

