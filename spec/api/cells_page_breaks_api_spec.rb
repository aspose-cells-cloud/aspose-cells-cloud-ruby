=begin
#Web API Swagger specification

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for AsposeCellsCloud::CellsPageBreaksApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CellsPageBreaksApi' do
  before do
    @instance = AsposeCellsCloud::CellsApi.new("66164C51-693E-4904-A121-545961673EC1","536e76768419db9585afdd37bb5f7533")
  end
  after do
    # run after each test
  end

  # unit tests for cells_page_breaks_get_horizontal_page_break
  # 
  # 
  # @param name 
  # @param sheet_name 
  # @param index 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder 
  # @option opts [String] :storage storage name.
  # @return [HorizontalPageBreakResponse]
  describe 'cells_page_breaks_get_horizontal_page_break test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET1
      index = 0
      folder = $TEMPFOLDER
      @instance.upload_file( folder+"/"+name,  ::File.open("/home/roywang/asposecellscloudsdk/data/" +name,"r") {|io| io.read(io.size) })
      @instance.cells_page_breaks_get_horizontal_page_break(name, sheet_name, index, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_page_breaks_get_horizontal_page_breaks
  # 
  # 
  # @param name 
  # @param sheet_name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder 
  # @option opts [String] :storage storage name.
  # @return [HorizontalPageBreaksResponse]
  describe 'cells_page_breaks_get_horizontal_page_breaks test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET1
      folder = $TEMPFOLDER
      @instance.upload_file( folder+"/"+name,  ::File.open("/home/roywang/asposecellscloudsdk/data/" +name,"r") {|io| io.read(io.size) })
      @instance.cells_page_breaks_get_horizontal_page_breaks(name, sheet_name, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_page_breaks_get_vertical_page_break
  # 
  # 
  # @param name 
  # @param sheet_name 
  # @param index 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder 
  # @option opts [String] :storage storage name.
  # @return [VerticalPageBreakResponse]
  describe 'cells_page_breaks_get_vertical_page_break test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET1
      index = 0
      folder = $TEMPFOLDER
      @instance.upload_file( folder+"/"+name,  ::File.open("/home/roywang/asposecellscloudsdk/data/" +name,"r") {|io| io.read(io.size) })
      @instance.cells_page_breaks_get_vertical_page_break(name, sheet_name, index, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_page_breaks_get_vertical_page_breaks
  # 
  # 
  # @param name 
  # @param sheet_name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder 
  # @option opts [String] :storage storage name.
  # @return [VerticalPageBreaksResponse]
  describe 'cells_page_breaks_get_vertical_page_breaks test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET1
      folder = $TEMPFOLDER
      
      @instance.cells_page_breaks_get_vertical_page_breaks(name, sheet_name, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_page_breaks_put_horizontal_page_break
  # 
  # 
  # @param name 
  # @param sheet_name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cellname 
  # @option opts [Integer] :row 
  # @option opts [Integer] :column 
  # @option opts [Integer] :start_column 
  # @option opts [Integer] :end_column 
  # @option opts [String] :folder 
  # @option opts [String] :storage storage name.
  # @return [CellsCloudResponse]
  describe 'cells_page_breaks_put_horizontal_page_break test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET1
      cellname = $CELLAREA
      row = 1
      column = 1
      start_column = 1
      end_column = 1
      folder = $TEMPFOLDER
      
      @instance.cells_page_breaks_put_horizontal_page_break(name, sheet_name, { :cellname=>cellname, :row=>row, :column=>column, :start_column=>start_column, :end_column=>end_column, :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_page_breaks_put_vertical_page_break
  # 
  # 
  # @param name 
  # @param sheet_name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cellname 
  # @option opts [Integer] :column 
  # @option opts [Integer] :row 
  # @option opts [Integer] :start_row 
  # @option opts [Integer] :end_row 
  # @option opts [String] :folder 
  # @option opts [String] :storage storage name.
  # @return [CellsCloudResponse]
  describe 'cells_page_breaks_put_vertical_page_break test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET1
      cellname = $CELLAREA
      column = 1
      row = 1
      start_row = 1
      end_row = 1
      folder = $TEMPFOLDER
      
      @instance.cells_page_breaks_put_vertical_page_break(name, sheet_name,  {:cellname=>cellname, :column=>column, :row=>row, :start_row=>start_row, :end_row=>end_row, :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_page_breaks_delete_horizontal_page_break
  # 
  # 
  # @param name 
  # @param sheet_name 
  # @param index 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder 
  # @option opts [String] :storage storage name.
  # @return [CellsCloudResponse]
  describe 'cells_page_breaks_delete_horizontal_page_break test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET1
      index = 0
      folder = $TEMPFOLDER
      
      @instance.cells_page_breaks_delete_horizontal_page_break(name, sheet_name, index, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_page_breaks_delete_horizontal_page_breaks
  # 
  # 
  # @param name 
  # @param sheet_name 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :row 
  # @option opts [String] :folder 
  # @option opts [String] :storage storage name.
  # @return [CellsCloudResponse]
  describe 'cells_page_breaks_delete_horizontal_page_breaks test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET1
      row = 1
      folder = $TEMPFOLDER
      
      @instance.cells_page_breaks_delete_horizontal_page_breaks(name, sheet_name,  { :row=>row,:folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_page_breaks_delete_vertical_page_break
  # 
  # 
  # @param name 
  # @param sheet_name 
  # @param index 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder 
  # @option opts [String] :storage storage name.
  # @return [CellsCloudResponse]
  describe 'cells_page_breaks_delete_vertical_page_break test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET1
      index = 0
      folder = $TEMPFOLDER
      
      @instance.cells_page_breaks_delete_vertical_page_break(name, sheet_name, index, { :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cells_page_breaks_delete_vertical_page_breaks
  # 
  # 
  # @param name 
  # @param sheet_name 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :column 
  # @option opts [String] :folder 
  # @option opts [String] :storage storage name.
  # @return [CellsCloudResponse]
  describe 'cells_page_breaks_delete_vertical_page_breaks test' do
    it "should work" do
      name = $BOOK1
      sheet_name = $SHEET1
      column = 1
      folder = $TEMPFOLDER
      @instance.upload_file( folder+"/"+name,  ::File.open("/home/roywang/asposecellscloudsdk/data/" +name,"r") {|io| io.read(io.size) })
      @instance.cells_page_breaks_delete_vertical_page_breaks(name, sheet_name,  { :column=>column,:folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
